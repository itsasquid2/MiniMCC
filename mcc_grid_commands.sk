
command /regentities <number>:
	permission: op
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		delete {mcc.grid.%arg 1%.entities::*}
		delete {mcc.grid.%arg 1%.locations::*}
		delete {mcc.grid.%arg 1%.items::*}
		set {_i} to 1
		loop entities in radius 20 of player:
			if "%type of loop-entity%" is not equal to "player":
				broadcast "%type of loop-entity%"
				
				set {mcc.grid.%arg 1%.entities::%{_i}%} to type of loop-entity
				set {mcc.grid.%arg 1%.locations::%{_i}%} to location of loop-entity
				
				
				add 1 to {_i}

command /spawnentities <number> <number>:
	usage: /spawnentities <team> <room number>
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		set {_i} to 1
		
		while {mcc.grid.%{mcc.grid.challenge.%arg 2%}%.entities::%{_i}%} is set:
			
			spawn {mcc.grid.%{mcc.grid.challenge.%arg 2%}%.entities::%{_i}%} at the location (33*((arg 1)-1)) south of {mcc.grid.%{mcc.grid.challenge.%arg 2%}%.locations::%{_i}%}
			
			add 1 to {_i}
			
command /skriptsummon <entity type>:
	permission: op
	trigger:
		spawn arg at event-player's location

on tab complete of "/skriptsummon":
	set tab completions of position 1 to entity types

command /gridgencourse:
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			if command sender is not "MiniMCC":
				message "<pink>You do not have permission to run this command!"
				exit trigger
		kill all entities in world "gridrunners"
		wait 1 second
		loop 10 times:
			execute console command "/schempaste grid_pool gridrunners -100 0 %loop-number * 33%"
			# wait 20 ticks
			# teleport event-player to location(-100, 0, loop-number*33, world "gridrunners")
			# make event-player execute command "//schem load grid_pool"
			# make event-player execute command "//paste"
			set {mcc.grid.numrooms} to 8
			loop 8 times:
				if {mcc.grid.challenge.%loop-number-2%} is equal to -1:
					subtract 1 from {mcc.grid.numrooms}
				else:
					if {mcc.grid.%{mcc.grid.challenge.%loop-number-2%}%.type} is equal to 4:
						execute console command "/schempaste grid_transition_4 gridrunners %(loop-number-2)*45-45% 0 %loop-number-1 * 33%"
						# teleport event-player to location((loop-number-2)*45-45, 0, loop-number-1 * 33, world "gridrunners")
						# make event-player execute command "//schem load grid_transition_4"
						# make event-player execute command "//paste"
						
					else if {mcc.grid.%{mcc.grid.challenge.%loop-number-2%}%.type} is equal to 22:
						execute console command "/schempaste grid_transition_22 gridrunners %(loop-number-2)*45-45% 0 %loop-number-1 * 33%"
						# teleport event-player to location((loop-number-2)*45-45, 0, loop-number-1 * 33, world "gridrunners")
						# make event-player execute command "//schem load grid_transition_22"
						# make event-player execute command "//paste"
					else:
						execute console command "/schempaste grid_transition_1111 gridrunners %(loop-number-2)*45-45% 0 %loop-number-1 * 33%"
						# teleport event-player to location((loop-number-2)*45-45, 0, loop-number-1 * 33, world "gridrunners")
						# make event-player execute command "//schem load grid_transition_1111"
						# make event-player execute command "//paste"
					execute console command "/schempaste gridrunners_%{mcc.grid.challenge.%loop-number-2%}% gridrunners %(loop-number-2)*45-30% 0 %loop-number-1 * 33%"
					# wait 20 ticks
					# teleport event-player to location((loop-number-2)*45-30, 0, (loop-number-1) * 33, world "gridrunners")
					# make event-player execute command "//schem load gridrunners_%{mcc.grid.challenge.%loop-number-2%}% -e"
					# make event-player execute command "//paste -e"
			execute console command "/schempaste grid_finish_2 gridrunners 360 0 %loop-number * 33%"
			# wait 20 ticks
			# teleport event-player to location(360, 0, (loop-number-1) * 33, world "gridrunners")
			# make event-player execute command "//schem load grid_finish_2"
			# make event-player execute command "//paste"
			# wait 20 ticks
			
		

on despawn:
	world is "gridrunners"
	cancel event

command /gridreg <number> <text> <number> <text> <number> <number>:
	usage: /gridreg <id> <name> <type> <blurb> <pointsreq> <roomnumber>
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			message "<pink>You do not have permission to run this command!"
			exit trigger
		set {mcc.grid.challenge.%arg 6%} to arg 1
		set {mcc.grid.%arg 1%.name} to arg 2
		set {mcc.grid.%arg 1%.type} to arg 3
		set {mcc.grid.%arg 1%.blurb} to arg 4
		set {mcc.grid.%arg 1%.pointsreq} to arg 5
		delete {mcc.grid.%arg 1%.kit::*}
		loop items in player's inventory:
			add loop-item to {mcc.grid.%arg 1%.kit::*}
		message "Registered new room with ID %arg 1%, name %arg 2%, type %arg 3%, blurb %arg 4%, points required %arg 5%, and kit %{mcc.grid.%arg 1%.kit::*}%"

command /gridregkit <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			delete {mcc.grid.%arg 1%.kit::*}
			loop items in player's inventory:
				add loop-item to {mcc.grid.%arg 1%.kit::*}

command /setfinish <text>:
	trigger:
		if {mmcc.hoster.%command sender%} is true or the console:
			set {mcc.grid.finish} to arg 1

command /gridtest <number>:
	trigger:
		message "gridrunners_%{mcc.grid.challenge.%arg 1%}%"

command /gridallow <number> [<number>]:
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			message "<pink>You do not have permission to run this command!"
			exit trigger
		if arg 2 is set:
			delete {mcc.grid.%arg 1%.whitelist::*}
			loop items in player's inventory:
				add loop-value to {mcc.grid.%arg 1%.whitelist::*}
			message "Set the whitelist in room %arg 1% to %{mcc.grid.%arg 1%.whitelist::*}%"
			exit trigger
		if {mcc.grid.allowing} is not equal to -1:
			set {mcc.grid.allowing} to -1 
			message "Now not allowing broken blocks to be broken/placed in room %arg 1%"
		else:
			set {mcc.grid.allowing} to arg 1 
			#delete {mcc.grid.%arg 1%.whitelist::*}
			message "Now allowing broken blocks to be broken/placed in room %arg 1%"

command /gridpoint <number> <number>:
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			if command sender is not the console:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		gridpoint(arg 1, arg 2)

on entity drop of an egg:
	
	world is "gridrunners"
	cancel event


on walk on concrete:
	if event-entity is a player:
		if {mcc.grid.pads::*} contains event-block:
			if event-block is red concrete:
				gridpoint(1,1)
			else if event-block is orange concrete:
				gridpoint(2,1)
			else if event-block is yellow concrete:
				gridpoint(3,1)
			else if event-block is lime concrete:
				gridpoint(4,1)
			else if event-block is green concrete:
				gridpoint(5,1)
			else if event-block is cyan concrete:
				gridpoint(6,1)
			else if event-block is light blue concrete:
				gridpoint(7,1)
			else if event-block is blue concrete:
				gridpoint(8,1)
			else if event-block is purple concrete:
				gridpoint(9,1)
			else if event-block is pink concrete:
				gridpoint(10,1)
			set event-block to stone
			set block 1 block north of event-block to stone
			set block 2 block north of event-block to stone
			set block 1 block south of event-block to stone
			set block 2 block south of event-block to stone

command /gridrunnerssetconcrete:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			loop 10 times:
				broadcast 33*((loop-number) - 1)
				if loop-number is 1:
					set {_conc} to red concrete
				else if loop-number is 2:
					set {_conc} to orange concrete
				else if loop-number is 3:
					set {_conc} to yellow concrete
				else if loop-number is 4:
					set {_conc} to lime concrete
				else if loop-number is 5:
					set {_conc} to green concrete
				else if loop-number is 6:
					set {_conc} to cyan concrete
				else if loop-number is 7:
					set {_conc} to light blue concrete
				else if loop-number is 8:
					set {_conc} to blue concrete
				else if loop-number is 9:
					set {_conc} to purple concrete
				else if loop-number is 10:
					set {_conc} to pink concrete
				set {_loc} to the location 33*((loop-number) - 1) blocks south of player
				
				set block below {_loc} to {_conc}
				add block below {_loc} to {mcc.grid.pads::*}
				set block 1 block below the location 1 block north of {_loc} to {_conc}
				add block 1 block below the location 1 block north of {_loc} to {mcc.grid.pads::*}
				set block 1 block below the location 1 block south of {_loc} to {_conc}
				add block 1 block below the location 1 block south of {_loc} to {mcc.grid.pads::*}
				
			
	




		



on break:
	player is "itsasquid2"
	if {mcc.grid.allowing} is not equal to -1:
		#tl("%type of event-block%")
		add type of event-block to {mcc.grid.%{mcc.grid.allowing}%.whitelist::*}





on hunger meter change:
	player's world is "gridrunners"
	cancel event		





on break of dirt:
	event-world is "gridrunners"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Clean the Statue!":
		gridpoint({mcc.team.%player's name%}, 1)

on break of spawner:
	event-world is "gridrunners"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Destroy the Source!":
		gridpoint({mcc.team.%player's name%}, 1)

on break of magenta bed:
	event-world is "gridrunners"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Break the Bed!":
		gridpoint({mcc.team.%player's name%}, 1)

on place of dirt:
	event-world is "gridrunners"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Clean the Statue!":
		gridpoint({mcc.team.%player's name%}, -1)

on projectile hit:
	event-world is "gridrunners"
	first 4 characters of "%event-block%" is "'arc"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%shooter%}%}%}%.blurb} is equal to "Shoot the Targets!":
		set event-block to emerald block	
		gridpoint({mcc.team.%shooter%}, 1)

on death:
	event-world is "gridrunners"
	set {_team} to floor((z-coordinate of event-location + 16)/33)
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{_team}%}%}%.blurb} is equal to "Defeat the Beasts!":
		gridpoint({_team},1)


on leftclick on warped button:
	event-world is "gridrunners"
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Punch the Buttons!":
		set block at event-location to air
		gridpoint({mcc.team.%player's name%}, 1)



on inventory pickup:
	world of event-entity is "gridrunners"
	
	loop entities in radius 1.2 around event-entity:
		if loop-entity is not event-entity:
			if item of loop-entity is lime stained glass pane:
				cancel event
				exit trigger
			# broadcast type of item of loop-entity
			# broadcast type of event-item
			if "%type of item of loop-entity%" is "%type of event-item%":
				set {_team} to floor((z-coordinate of event-location + 16)/33)
				#if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{_team}%}%}%.blurb} is equal to "Gather the Items!":
				gridpoint({_team},1)
				set item of loop-entity to lime stained glass pane 
			else:
				cancel event

on break:
	world is "gridrunners"
	if {mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%} is 80:
		loop entities in radius 1.2 around event-block:
			if loop-entity is item frame:
				cancel event
				message "<red>You cannot break blocks near item frames!" to event-player
		if event-block is light blue stained glass or white concrete or magenta glazed terracotta:
			cancel event
			message "<red>You cannot break that!" to event-player
		
on place:
	world is "gridrunners"
	if {mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%} is 80:
		loop entities in radius 1.2 around event-block:
			if loop-entity is item frame:
				cancel event
				message "<red>You cannot place blocks near item frames!" to event-player

command /endgrid:
	trigger:
		if {mmcc.hoster.%command sender%} is true or the console:
			set {mcc.grid.timeleft} to 1

on damage of item frame:
	event-world is "gridrunners"
	if {mcc.currentevent} is equal to "gridrunners":
		cancel event

on combust:
	event-world is "gridrunners"
	cancel event

on rightclick on hopper:
	event-world is "gridrunners"
	cancel event

on walking on smooth stone slab:
	player is in world "gridrunners"
	player's game mode is adventure
	{mcc.team.%player's name%} is not equal to 0
	player's x-coordinate is greater than 40+45*{mcc.grid.numrooms}
	set player's game mode to spectator
	add 1 to {mcc.grid.numfinished.%{mcc.team.%player's name%}%}
	if {mcc.grid.numfinished.%{mcc.team.%player's name%}%} is equal to {mcc.grid.numplayers.%{mcc.team.%player's name%}%}:
		set {_bla} to 0
		loop 10 times:
			if {mcc.grid.numfinished.%loop-number%} is equal to {mcc.grid.numplayers.%loop-number%}:	
				if {mcc.grid.numplayers.%loop-number%} is not equal to 0:
					add 1 to {_bla}
		broadcast "%{mcc.teams::%{mcc.team.%player's name%}%}% <white>have finished the entire course in <light blue>%nth({_bla})% <white>place!"
		set {mcc.grid.time.team.%{mcc.team.%player's name%}%.room.9} to {mcc.grid.timestamp}




on rightclick on cake:
	event-world is "gridrunners"
	set player's hunger to 9
	wait a tick
	set event-block to air
	if {mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Eat the Cakes!":
		gridpoint({mcc.team.%player's name%}, 1)
	wait 1 second
	set player's hunger to 10


on item merge of cocoa beans:
	event-world is "gridrunners"
	cancel event
	
on rightclick on lever:
	event-world is "gridrunners"
	{mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Light the Lamps!"
	loop blocks in radius 1 of event-location:
		if loop-block is redstone lamp:
			set loop-block to shroomlight
			gridpoint({mcc.team.%player's name%}, 1)



on place of iron block or blue concrete or smooth quartz stairs:
	event-world is "gridrunners"
	{mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Copy the Sculpture!"
	wait a tick
	if mccgridcopydone({mcc.team.%player's name%}, {mcc.grid.room.%{mcc.team.%player's name%}%}) is true:
		gridpoint({mcc.team.%player's name%}, 1)

on break of iron block or blue concrete or smooth quartz stairs:
	event-world is "gridrunners"
	{mcc.grid.%{mcc.grid.challenge.%{mcc.grid.room.%{mcc.team.%player's name%}%}%}%.blurb} is equal to "Copy the Sculpture!"
	wait a tick
	if mccgridcopydone({mcc.team.%player's name%}, {mcc.grid.room.%{mcc.team.%player's name%}%}) is true:
		gridpoint({mcc.team.%player's name%}, 1)

on break:
	event-world is "gridrunners"
	
	if mod(x coordinate of event-block - 14.5, 45) is 0:
		cancel event
		message "<red>You cannot do that!" to event-player


function checksame(l:location) :: boolean:
	# broadcast type of block at {_l}
	# broadcast type of block 16 meters south of {_l}
	if type of block at {_l} is equal to type of block 16 meters south of {_l}:
		
		return true
	return false
	

function mccgridcopydone(t: number, r: number) :: boolean:
	loop numbers from -15.5+45*{_r} to -11.5+45*{_r}:
		loop numbers from 0.5 to 4.5:
			loop numbers from -9.5+33*{_t} to -5.5+33*{_t}:	
				set {_bla} to the location at loop-number-1, loop-number-2, loop-number-3 of world "gridrunners"
				#broadcast {_bla}
				if checksame({_bla}) is false:
					return false
	return true
	
	

