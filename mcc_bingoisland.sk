variables:
	{mcc.bingoisland.timeleft} = 0
	{mcc.bingoisland.stage} = 0
	{mcc.bingoisland.portalcooldown.%player%} = false

function mccbingoislandtutorial(p:player):
	wait 3 seconds
	send title "<yellow>Bingo Island" to {_p} for 5 seconds
	wait 5 seconds
	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow>Welcome to Bingo Island!" to {_p}
	send "" to {_p}
	send "<italics>Here's how you play..." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 3 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Bingo Island is a Minecraft scavenger hunt!" to {_p}
	send "" to {_p}
	send "Your goal is to collect the items shown on your <gold>Bingo Card<white> before time runs out!" to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 5 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>You earn coins for each item found, and every <gold>bingo<white> (complete row, column, or long diagonal). Coordination is key!" to {_p}
	send "" to {_p}
	send "To score an item, right-click your Bingo Card to view the grid, and then click on the item you wish to score." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>One member of your team may teleport to another once every 5 minutes!" to {_p}
	send "" to {_p}
	send "Use this ability wisely! Teleport using /teamtp [teammate]." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>In Bingo Island, use the portals at each island to get wherever you need to go!" to {_p}
	send "" to {_p}
	send "Most portals take you to a biome, but there are exceptions: the ruins portal takes you to an ancient city, and the ocean portal takes you to an ocean monument!" to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 12 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>There are also mob spawners around spawn!" to {_p}
	send "" to {_p}
	send "These do not work like normal mob spawners! To use them, press the buttons on the sides, but you can only do this once every 30 seconds." to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 10 seconds	

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Hope you enjoy this Matthew original!" to {_p}
	send "" to {_p}
	send "Good luck!" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}


command /mccbingoisland:
	permission: op
	trigger:
		if command sender is not the console:
			if command sender is not "itsasquid2":
				message "<pink>You cannot do this!"
				exit trigger
		if {mcc.bingo.inprogress} is true:
			message "Bingo already in progress!"
			exit trigger
		execute console command "/mccnewgame"
		set {mcc.bingo.inprogress} to true
		set {mcc.currentevent} to "bingoisland"
		loop 4 times:
			loop 4 times:
				loop 10 times:
					set {mcc.bingo.hasfound.%loop-number-1%.%loop-number-2%.%loop-number-3%} to false
		set {bingo.tictactoe} to false
		loop all players:
			if {mcc.team.%loop-player%} is not equal to 0:
				execute console command "/mv tp %loop-player% bingo_island"
				if "%loop-player's world%" is equal to "bingo_island":
					set {immune.%loop-player%} to false
					set {mcc.bingoisland.portalcooldown.%loop-player%} to false
					wait a tick
					set loop-player's game mode to survival
					clear the loop-player's inventory
					give a stone axe to the loop-player
					give a stone sword to the loop-player
					give a stone pickaxe to the loop-player
					give a stone shovel to the loop-player
					give a white bed to loop-player
					give an oak boat to loop-player
					give 64 steak to loop-player
					give an enchanted book of silk touch to loop-player
					set slot 8 of loop-player's inventory to paper of curse of vanishing named "<gold>Bingo Card"
					mccbingotutorial(loop-player)
		loop 10 times:
			set {mcc.bingo.tpcooldown.%loop-number%} to 0
		set {mcc.bingoisland.stage} to 0
		set {mcc.bingoisland.timeleft} to 90
		delete {mcc.bingo.items::*}
		loop 4 times:
			loop 4 times:
				add {bingo.objectives::%{bingottt.board.%loop-number-1%.%loop-number-2%}%} to {mcc.bingo.items::*}	

on rightclick:
	player's tool is oak boat
	if {mcc.currentevent} is equal to "bingoisland":
		if {mcc.bingoisland.timeleft} is equal to 0:
			message "<pink>You cannot place the boat before the game starts!" to event-player
			cancel event		

on damage:
	attacker is a player
	victim is a player
	attacker's world is equal to "bingo_island" or "bingo_island_nether"
	distance between victim and {mcc.bingoisland.locs::9} is less than 130
	send "<pink>You cannot attack other players this close to spawn!" to attacker
	cancel event


every second:
	if {mcc.bingoisland.timeleft} is greater than 0:
		if {mcc.paused} is true:
			exit trigger
		loop 10 times:
			if {mcc.bingo.tpcooldown.%loop-number%} is greater than 0:
				subtract 1 from {mcc.bingo.tpcooldown.%loop-number%}
		subtract 1 from {mcc.bingoisland.timeleft}
		#if {mcc.bingoisland.timeleft} is equal to 900 or 650 or 400 or 150:
		#	execute console command "/playmusic buildmart"
		if {mcc.bingoisland.timeleft} is equal to 3:
			if {mcc.bingoisland.stage} is equal to 0:
				loop all players:
					if {mcc.team.%loop-player%} is not equal to 0:
						execute console command "/boopboopboopbeep %loop-player%"
		else if {mcc.bingoisland.timeleft} is less than or equal to 0:
			if {mcc.bingoisland.stage} is equal to 0:
				set {mcc.bingoisland.timeleft} to 450 
				set {mcc.bingoisland.stage} to 1
				loop blocks in radius 10 of {mcc.bingoisland.locs::9}:
					if loop-block is barrier:
						set loop-block to air
				loop all players:
					if {mcc.team.%loop-player%} is not equal to 0:
						set loop-player's game mode to survival 
			else if {mcc.bingoisland.stage} is equal to 1:
				loop all players:
					if {mcc.team.%loop-player%} is not equal to 0:
						send title "<pink>Game over!" to loop-player for 3 seconds
				set {mcc.bingo.inprogress} to false
				set {mcc.bingoisland.timeleft} to 30
				set {mcc.bingoisland.stage} to 2
				execute console command "/mccstandings"					
			else if {mcc.bingoisland.stage} is equal to 2:
				execute console command "/mccbreak"
				set {mcc.bingoisland.timeleft} to -1




on portal enter:
	"%player's world%" is equal to "bingo_island"
	block at player is end portal block
	if {mcc.bingoisland.portalcooldown.%player%} is true:
		exit trigger
	set {mcc.bingoisland.portalcooldown.%player%} to true	

	if block below event-location is sand:
		set {_ind} to 1
		set {_str} to "Desert"
	else if block below event-location is basalt:
		set {_ind} to 2
		set {_str} to "Volcano"
	else if block below event-location is deepslate:
		set {_ind} to 3
		set {_str} to "Ruins"
	else if block below event-location is mud:
		set {_ind} to 4
		set {_str} to "Swamp"
	else if block below event-location is grass block:
		set {_ind} to 5
		set {_str} to "Flower Forest"
	else if block below event-location is prismarine:
		set {_ind} to 6
		set {_str} to "Ocean"
	else if block below event-location is oak planks:
		set {_ind} to 7
		set {_str} to "Village"
	else if block below event-location is jungle planks:
		set {_ind} to 8
		set {_str} to "Jungle"
	else if block below event-location is bedrock:
		set {_ind} to 9
		set {_str} to "Spawn"
	if {_ind} is set:
		teleport player to {mcc.bingoisland.locs::%{_ind}%}		
		message "<lime>Teleported you to the %{_str}%<lime>! Coordinates: x: %round(x-coordinate of player)%, y: %round(y-coordinate of player)%, z: %round(z-coordinate of player)%"
	wait 3 seconds
	set {mcc.bingoisland.portalcooldown.%player%} to false


on teleport:
	player's world is "bingo_island"
	"%teleport cause%" is "end portal"
	cancel event



command /mccbingoislandsetloc <number>:
	trigger:
		if command sender is not the console:
			if command sender is not "itsasquid2":
				message "<pink>You do not have permission to run this command!"
				exit trigger
		set {mcc.bingoisland.locs::%arg 1%} to player's location

command /bingoislandreload:
	trigger:
		if command sender is not the console:
			if command sender is not "itsasquid2":
				message "<pink>You do not have permission to run this command!"
				exit trigger
		
		execute console command "/mvdelete bingo_island"
		wait 0.1 seconds
		execute console command "/mvconfirm"
		wait 0.1 seconds
		execute console command "/mvdelete bingo_island_nether"
		wait 0.1 seconds
		execute console command "/mvconfirm"
		wait 0.1 seconds
		execute console command "/mvcreate bingo_island normal -g Terra:CUSTOM"
		execute console command "/mvcreate bingo_island_nether nether"


on place:
	"%event-world%" is equal to "bingo_island"
	distance between event-location and {mcc.bingoisland.locs::9} is less than 130
	player's game mode is survival
	message "<pink>You cannot place blocks this close to spawn!" to event-player
	cancel event

on break:
	"%event-world%" is equal to "bingo_island"
	distance between event-location and {mcc.bingoisland.locs::9} is less than 130
	player's game mode is survival
	if event-block is not birch log:
		if event-block is not oak log:
			if event-block is not stripped birch log:
				if event-block is not stripped oak log:
					if event-block is not birch leaves:
						if event-block is not oak leaves:
							message "<pink>You can only break the trees this close to spawn!" to event-player
							cancel event



on rightclick on stone button:
	loop blocks in radius 1 of event-location:
		if type of loop-block is mob spawner:
			if {mcc.bingo.spawncooldown.%player%} is not true:
				set {_bla} to the loop-block's entity type
				spawn {_bla}
				set {mcc.bingo.spawncooldown.%player%} to true
				wait 30 seconds
				set {mcc.bingo.spawncooldown.%player%} to false
			else:
				message "<pink>You may only use a spawner once every 30 seconds!" to event-player

on spawn:
	spawn reason is mob spawner
	event-world is "bingo_island"
	cancel event
