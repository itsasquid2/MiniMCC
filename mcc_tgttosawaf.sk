variables:
	{mcc.tgttosawaf.playersdone} = 0
	{mcc.tgttosawaf.timeleft} = 90
	{mcc.tgttosawaf.middle} = false 
	{mcc.tgttosawaf.teamsdone} = 0 
	{mcc.tgttosawaf.finished.%player%} = false
	{mcc.tgttosawaf.inprogress} = false
	{mcc.tgttosawaf.roundnum} = 1
	{mcc.tgttosawaf.map.1} = 10
	{mcc.tgttosawaf.map.2} = 9
	{mcc.tgttosawaf.map.3} = 11
	{mcc.tgttosawaf.map.4} = 12
	{mcc.tgttosawaf.map.5} = 15
	{mcc.tgttosawaf.map.6} = 14
	
command /setmaptgttos <number> <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.tgttosawaf.map.%arg 1%} to arg 2
		if command sender is the console:
			set {mcc.tgttosawaf.map.%arg 1%} to arg 2

command /setround:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.tgttosawaf.roundnum} to 1
		if command sender is the console:
			set {mcc.tgttosawaf.roundnum} to 1

function mcctgttosawaftutorial(p:player):
	wait 3 seconds
	send title "<yellow>TGTTOSAWAF" to {_p} for 5 seconds
	wait 5 seconds
	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow><bold>Welcome to TGTTOSAWAF!" to {_p}
	send "" to {_p}
	send "<italics>Here's how you play..." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 3 seconds


	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Hey! Why did the chicken cross the road?" to {_p}
	send "" to {_p}
	send "To get to the other side and whack a fan!!! xD xD" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 5 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>In TGTTOSAWAF, your goal is to get to the other side and whack a fan faster than your opponents." to {_p}
	send "" to {_p}
	send "Once you've reached the other side, you will need to whack a fan to complete the course." to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>There are 6 rounds in total, on 6 different courses." to {_p}
	send "" to {_p}
	send "Each round gives you different equipment to help you reach the other side, or sabotage your opponents!" to {_p}
	send "" to {_p}
	send "If you fall, you'll respawn back at the start." to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow><bold>Extra tips:" to {_p}
	send "" to {_p}
	send "- You have infinite wool" to {_p}
	send "" to {_p}
	send "- You will instantly get into and out of boats" to {_p}
	send "" to {_p}
	send "- The first four full teams to finish each course earn a bonus, so help your teammates out!" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

function givecoloredwool(p:player):
	if {mcc.team.%{_p}%} is equal to 0:
		give 64 white wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 1:
		give 64 red wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 2:
		give 64 orange wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 3:
		give 64 yellow wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 4:
		give 64 lime wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 5:
		give 64 green wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 6:
		give 64 cyan wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 7:
		give 64 light blue wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 8:
		give 64 blue wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 9:
		give 64 purple wool to {_p}
	else if {mcc.team.%{_p}%} is equal to 10:
		give 64 magenta wool to {_p}

function giveconc(p:player):
	if {mcc.team.%{_p}%} is equal to 0:
		give 64 white concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 1:
		give 64 red concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 2:
		give 64 orange concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 3:
		give 64 yellow concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 4:
		give 64 lime concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 5:
		give 64 green concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 6:
		give 64 cyan concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 7:
		give 64 light blue concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 8:
		give 64 blue concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 9:
		give 64 purple concrete to {_p}
	else if {mcc.team.%{_p}%} is equal to 10:
		give 64 magenta concrete to {_p}

function nth(n:number) :: text:
	set {_bla} to floor({_n}/10)
	set {_ba} to mod({_n},10)
	if {_bla} is equal to 1:
		return "%{_n}%th"
	if {_ba} is equal to 1:
		return "%{_n}%st"
	else if {_ba} is equal to 2:
		return "%{_n}%nd"
	else if {_ba} is equal to 3:
		return "%{_n}%rd"
	else:
		return "%{_n}%th"


on world change:
	if "%player's world%" is equal to "tgttosawaf" or "tgttosawaf2":
		set {tgttosawafworld} to player's world

on dismount:
	"%player's world%" is equal to "tgttosawaf"
	set {_bla} to 0
	loop passengers of player's vehicle:
		add 1 to {_bla}
	if {_bla} is equal to 1:
		delete the player's vehicle
		give an oak boat to the player	

on rightclick:
	"%player's world%" is equal to "tgttosawaf"
	player's tool is oak boat
	if {mcc.tgttosawaf.middle} is false:
		set player's tool to air
		cancel event
		make the player ride an oak boat
	else:
		cancel event

on damage:
	victim is a player
	"%victim's world%" is equal to "tgttosawaf"
	if damage cause is fall:
		cancel event
		exit trigger
	else if attacker is a player:
		set damage to 0.01
		if {mcc.tgttosawaf.middle} is true:
			cancel event
	else if damage cause is lava:
		teleport victim to {mcc.tgttosawaf.startinglocs::%{mcc.tgttosawaf.currentmap}%}
	wait a tick
	set victim's health to 10
	extinguish the victim


#on place:
#	"%player's world%" is equal to "tgttosawaf"
#	if {mcc.tgttosawaf.middle} is true:
#		cancel event
#	else:
#		if {mcc.tgttosawaf.blocks::*} contains event-item:
#			if player's gamemode is survival:
#				wait 1 tick
#				give event-item to the player

on place of wool:
	"%player's world%" is equal to "tgttosawaf"
	player's gamemode is survival
	if {mcc.tgttosawaf.middle} is true:
		cancel event
		exit trigger
	wait 1 tick
	if type of player's off hand tool is wool:
		add 1 to item amount of player's off hand tool
	else:
		add 1 to item amount of player's tool

on break:
	"%player's world%" is equal to "tgttosawaf"
	if event-block is not wool:
		if player's gamemode is survival:
			if event-block isn't concrete:
				message "<pink>You can only break blocks placed by a player!" to event-player
				cancel event	
			else if region at event-block's location isn't "tgttos_concrete_break":
				message "<pink>You can only break blocks placed by a player!!" to event-player
				cancel event	

every second:
	loop all players in "tgttosawaf":
		if loop-player's y-coordinate is less than 0:
			teleport loop-player to {mcc.tgttosawaf.startinglocs::%{mcc.tgttosawaf.currentmap}%}
#			set {_shortestdist} to 99999999
#			loop {mcc.tgttosawaf.startinglocs::*}:
#				if distance between loop-player and loop-value-2 is less than {_shortestdist}:
#					set {_shortestdist} to distance between loop-player and loop-value-2
#					set {_loc} to loop-value-2
#			if {_loc} is set:
#				teleport loop-player to {_loc}
#			delete {_loc}




command /mccotherside <player> <text>:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		if {mcc.tgttosawaf.inprogress} is false:
			send "<pink>This game is over!" to arg 1
			exit trigger
		if {mcc.tgttosawaf.finished.%arg 1's name%} is true:
			send "<pink>You have already whacked a fan!" to arg 1
			exit trigger	
		if {mcc.tgttosawaf.middle} is true:
			send "<pink>This round is over!" to arg 1
			exit trigger	
		add 1 to {mcc.tgttosawaf.playersdone}
		broadcast formatted "<%mcccolor({mcc.team.%arg 1's name%})%>%arg 1% <gray>whacked <white>%arg 2%, <gray>coming in <light blue>%nth({mcc.tgttosawaf.playersdone})% place!"
		set {mcc.tgttosawaf.finished.%arg 1's name%} to true
		if {mcc.tgttosawaf.playersdone} is less than or equal to 10:
			ac(arg 1, 125-5*{mcc.tgttosawaf.playersdone}, "You finished this round in %nth({mcc.tgttosawaf.playersdone})% place!", false)
		else:
			ac(arg 1, 41-{mcc.tgttosawaf.playersdone}, "You finished this round in %nth({mcc.tgttosawaf.playersdone})% place!", false)
		set arg 1's game mode to spectator
		if {mcc.tgttosawaf.teamsdone} is less than size of {mcc.tgttosawaf.teambonus::*}:
			set {_teamdone} to true
			loop all players:
				if {mcc.team.%loop-player's name%} is equal to {mcc.team.%arg 1's name%}:
					if {mcc.tgttosawaf.finished.%loop-player's name%} is false:
						set {_teamdone} to false
			if {_teamdone} is true:
				add 1 to {mcc.tgttosawaf.teamsdone}
				broadcast "%{mcc.teams::%{mcc.team.%arg 1's name%}%}% <lime><bold>was the %nth({mcc.tgttosawaf.teamsdone})%<lime><bold> full team to finish!"
				set {_np} to 0
				loop all players:
					if {mcc.team.%loop-player's name%} is equal to {mcc.team.%arg 1's name%}:
						add 1 to {_np}
				loop all players:
					if {mcc.team.%loop-player's name%} is equal to {mcc.team.%arg 1's name%}:
						ac(loop-player, ceil({mcc.tgttosawaf.teambonus::%{mcc.tgttosawaf.teamsdone}%}/{_np}), "Your team was %nth({mcc.tgttosawaf.teamsdone})% to finish!", true)	
				
		launch ball large colored mcccolor({mcc.team.%arg 1's name%}) at arg 1's location with duration 0
		set {_done} to true
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				if {mcc.tgttosawaf.finished.%loop-player's name%} is false:
					set {_done} to false
		if {_done} is true:
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					set {mcc.tgttosawaf.timeleft} to 0
		

on damage:
	world is "tgttosawaf"
	if victim is a chicken:
		if attacker is a player:
			if damage cause is not projectile:
				kill victim
				execute console command "/mccotherside %attacker% a chicken"
		if damage cause is void:
			kill victim

function summonchicken(t:number, loc:location):
	spawn a chicken at {_loc}

command /mccsummonfans <number>:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		if arg 1 is equal to 1:
			loop 40 times:
				set {_x} to a random number between 65.5 and 71.5 
				set {_z} to a random number between 185.5 and 205.5
				set {_loc} to the location at {_x}, 26, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 2:
			loop 40 times:
				set {_x} to a random number between 989.5 and 1000.5 
				set {_z} to a random number between 1091.5 and 1096.5 
				set {_loc} to the location at {_x}, 47, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 3:
			loop 40 times:
				set {_x} to a random number between -388.5 and -364.5 
				set {_z} to a random number between -93.5 and -102.5 
				set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 4:
			loop 40 times:
				set {_x} to a random number between 1061.5 and 1067.5 
				set {_z} to a random number between -995.5 and -1023.5 
				set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 5:
			loop 40 times:
				set {_x} to a random number between -1598.5 and -1613.5 
				set {_z} to a random number between -476.5 and -479.5 
				set {_loc} to the location at {_x}, 28, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 6:
			loop 40 times:
				set {_x} to a random number between 1224.5 and 1222.5 
				set {_z} to a random number between -192.5 and -198.5 
				set {_loc} to the location at {_x}, 9, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 7:
			loop 40 times:
				set {_x} to a random number between -2.5 and 17.5 
				set {_z} to a random number between -221.5 and -229.5 
				set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 8:
			loop 40 times:
				set {_x} to a random number between 1997.5 and 2007.5 
				set {_z} to a random number between 98.5 and 100.5 
				set {_loc} to the location at {_x}, 10, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 9:
			loop 40 times:
				set {_x} to a random number between -270.5 and -264.5 
				set {_z} to a random number between 2302.5 and 2320.5 
				set {_loc} to the location at {_x}, 1, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 10:
			loop 40 times:
				set {_x} to a random number between 2748.5 and 2755.5 
				set {_z} to a random number between -18.5 and 4.5 
				set {_loc} to the location at {_x}, 4, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 11:
			loop 40 times:
				set {_x} to a random number between 9.5 and 16.5 
				set {_z} to a random number between -1190.5 and -1197.5 
				set {_loc} to the location at {_x}, 8, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 12:
			loop 40 times:
				set {_x} to a random number between -946.5 and -950.5 
				set {_z} to a random number between 14.5 and 26.5 
				set {_loc} to the location at {_x}, 25, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 13:
			loop 40 times:
				set {_x} to a random number between -1860.5 and -1849.5 
				set {_z} to a random number between 85.5 and 107.5 
				set {_loc} to the location at {_x}, 49, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 14:
			loop 40 times:
				set {_x} to a random number between 4897.5 and 4903.5 
				set {_z} to a random number between -157.5 and -163.5 
				set {_loc} to the location at {_x}, 7, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 15:
			loop 40 times:
				set {_x} to a random number between -4902.5 and -4907.5 
				set {_z} to a random number between 79.5 and 83.5 
				set {_loc} to the location at {_x}, 11, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 16:
			loop 40 times:
				set {_x} to a random number between -1052.5 and -1060.5 
				set {_z} to a random number between 1030.5 and 1038.5 
				set {_loc} to the location at {_x}, 4, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 17:
			loop 40 times:
				set {_x} to a random number between -61 and -35 
				set {_z} to a random number between 521 and 529
				set {_loc} to the location at {_x}, 38, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}
		else if arg 1 is equal to 18:
			loop 40 times:
				set {_x} to a random number between -84 and -124 
				set {_z} to a random number between 28 and 31
				set {_loc} to the location at {_x}, 57, {_z} of world {tgttosawafworld}
				summonchicken(loop-number, {_loc})
				#broadcast {_loc}

command /mcctgttosawafteleporttomap <number>:
	permission: op
	trigger:
		if arg 1 is equal to 1:
			#loop 1 times:
			set {_x} to a random number between 65.5 and 71.5 
			set {_z} to a random number between 185.5 and 205.5
			set {_loc} to the location at {_x}, 26, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 2:
			#loop 1 times:
			set {_x} to a random number between 989.5 and 1000.5 
			set {_z} to a random number between 1091.5 and 1096.5 
			set {_loc} to the location at {_x}, 47, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 3:
			#loop 1 times:
			set {_x} to a random number between -388.5 and -364.5 
			set {_z} to a random number between -93.5 and -102.5 
			set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 4:
			#loop 1 times:
			set {_x} to a random number between 1061.5 and 1067.5 
			set {_z} to a random number between -995.5 and -1023.5 
			set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 5:
			#loop 1 times:
			set {_x} to a random number between -1598.5 and -1613.5 
			set {_z} to a random number between -476.5 and -479.5 
			set {_loc} to the location at {_x}, 28, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 6:
			#loop 1 times:
			set {_x} to a random number between 1224.5 and 1222.5 
			set {_z} to a random number between -192.5 and -198.5 
			set {_loc} to the location at {_x}, 9, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 7:
			#loop 1 times:
			set {_x} to a random number between -2.5 and 17.5 
			set {_z} to a random number between -221.5 and -229.5 
			set {_loc} to the location at {_x}, 5, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 8:
			#loop 1 times:
			set {_x} to a random number between 1997.5 and 2007.5 
			set {_z} to a random number between 98.5 and 100.5 
			set {_loc} to the location at {_x}, 10, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 9:
		#loop 1 times:
			set {_x} to a random number between -270.5 and -264.5 
			set {_z} to a random number between 2302.5 and 2320.5 
			set {_loc} to the location at {_x}, 1, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 10:
			#loop 1 times:
			set {_x} to a random number between 2748.5 and 2755.5 
			set {_z} to a random number between -18.5 and 4.5 
			set {_loc} to the location at {_x}, 4, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 11:
			#loop 1 times:
			set {_x} to a random number between 9.5 and 16.5 
			set {_z} to a random number between -1190.5 and -1197.5 
			set {_loc} to the location at {_x}, 8, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 12:
			#loop 1 times:
			set {_x} to a random number between -946.5 and -950.5 
			set {_z} to a random number between 14.5 and 26.5 
			set {_loc} to the location at {_x}, 25, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 13:
			#loop 1 times:
			set {_x} to a random number between -1860.5 and -1849.5 
			set {_z} to a random number between 85.5 and 107.5 
			set {_loc} to the location at {_x}, 49, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 14:
			#loop 1 times:
			set {_x} to a random number between 4897.5 and 4903.5 
			set {_z} to a random number between -157.5 and -163.5 
			set {_loc} to the location at {_x}, 7, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 15:
			##loop 1 times:
			set {_x} to a random number between -4902.5 and -4907.5 
			set {_z} to a random number between 79.5 and 83.5 
			set {_loc} to the location at {_x}, 11, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 16:
			##loop 1 times:
			set {_x} to a random number between -1052.5 and -1060.5 
			set {_z} to a random number between 1030.5 and 1038.5 
			set {_loc} to the location at {_x}, 4, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 17:
			#loop 40 times:
			set {_x} to a random number between -61 and -35 
			set {_z} to a random number between 521 and 529
			set {_loc} to the location at {_x}, 38, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}
		else if arg 1 is equal to 18:
			#loop 40 times:
			set {_x} to a random number between -84 and -124 
			set {_z} to a random number between 28 and 31
			set {_loc} to the location at {_x}, 57, {_z} of world {tgttosawafworld}
			teleport player to {_loc}
				#broadcast {_loc}

command /mcctgttosawaf [<number>] [<boolean>]:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				if command sender is not "notcbop":
					message "<pink>You do not have permission to run this command!"
					exit trigger
		if arg 1 is not set:
			execute console command "/mccnewgame"
			execute console command "/mcctgttosawaf %{mcc.tgttosawaf.map.1}% true"
			set {mcc.tgttosawaf.roundnum} to 1
			set {mcc.tgttosawaf.musictimer} to 0
			exit trigger
		execute console command "/mccsummonfans %arg 1%"
		set {mcc.tgttosawaf.inprogress} to true
		set {mcc.currentevent} to "tgttosawaf"
		if arg 2 is true:
			set {mcc.tgttosawaf.timeleft} to 50 
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					mcctgttosawaftutorial(loop-player)
		else:
			set {mcc.tgttosawaf.timeleft} to 10
		set {mcc.tgttosawaf.middle} to true
		set {mcc.tgttosawaf.teamsdone} to 0
		loop {mcc.tgttosawaf.barriers.%arg 1%::*}:
			set block at loop-value to barrier
		if arg 1 is equal to 9:
			set {mcc.tgttosawaf.terraswoopforce} to true
			execute console command "/kc keeprail coords -524 146 1784 tgttosawaf"
		else:
			set {mcc.tgttosawaf.terraswoopforce} to false 
			execute console command "/kc releaserail coords -524 146 1784 tgttosawaf"
		set {mcc.tgttosawaf.currentmap} to arg 1
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				teleport loop-player to {mcc.tgttosawaf.startinglocs::%arg 1%}
				set {mcc.tgttosawaf.finished.%loop-player's name%} to false
				if "%loop-player's world%" is equal to "tgttosawaf":
					clear the loop-player's inventory
					set {immune.%loop-player's name%} to false
					set the loop-player's game mode to survival
					if arg 1 is equal to 1:
						givecoloredwool(loop-player)
						give shears to loop-player
					else if arg 1 is equal to 2:
						givecoloredwool(loop-player)
						give shears to loop-player
					else if arg 1 is equal to 3:
						give oak boat to loop-player
					else if arg 1 is equal to 4:
						give a trident of riptide 3 to loop-player
					else if arg 1 is equal to 5:
						givecoloredwool(loop-player)
						set the loop-player's chestplate to elytra
					else if arg 1 is equal to 7:
						givecoloredwool(loop-player)
						give shears to loop-player
					else if arg 1 is equal to 9:
						set the loop-player's chestplate to elytra
					else if arg 1 is equal to 10:
						give a trident of riptide 3 to loop-player
					else if arg 1 is equal to 13:
						givecoloredwool(loop-player)
						give shears to loop-player
					else if arg 1 is equal to 14:
						givecoloredwool(loop-player)
						give shears to loop-player
					else if arg 1 is equal to 17:
						give iron pickaxe to loop-player
					else if arg 1 is equal to 18:
						givecoloredwool(loop-player)
						give shears to loop-player
						give potion of strong leaping to loop-player
		set {mcc.tgttosawaf.playersdone} to 0
every second:
	if {mcc.currentevent} is "tgttosawaf":
		if {mcc.paused} isn't true:
			add 1 to {mcc.tgttosawaf.musictimer}
			if {mcc.tgttosawaf.musictimer} is greater than or equal to 50:
				if mod({mcc.tgttosawaf.musictimer}-50,124) is 0:
					execute console command "/playmusic tgttos"
command /clearwool <number>:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				if {mmcc.hosts::*} doesn't contain command sender:
					message "<pink>You do not have permission to run this command!"
					exit trigger
		loop blocks in radius arg 1 of player:
			if loop-block is wool:
				set loop-block to air

command /clearchickens <number>:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		loop entities in radius arg 1 of player:
			if loop-entity is chicken:
				kill loop-entity

every second:
	if {mcc.paused} is true:
		exit trigger
	if {mcc.tgttosawaf.timeleft} is greater than 0:
		subtract 1 from {mcc.tgttosawaf.timeleft}
		if {mcc.tgttosawaf.timeleft} is equal to 2:
			if {mcc.tgttosawaf.middle} is true:
				loop all players:
					if {mcc.team.%loop-player's name%} is not equal to 0:
						execute console command "/boopboopboopbeep %loop-player%"
	else if {mcc.tgttosawaf.timeleft} is equal to 0:
		if {mcc.tgttosawaf.middle} is true:
			set {mcc.tgttosawaf.middle} to false
			set {mcc.tgttosawaf.timeleft} to 90
			loop {mcc.tgttosawaf.barriers.%{mcc.tgttosawaf.map.%{mcc.tgttosawaf.roundnum}%}%::*}:
				set block at loop-value to air	
			#remove barriers
		else:
			if {mcc.tgttosawaf.inprogress} is false:
				set {mcc.tgttosawaf.timeleft} to -1
				execute console command "/mccbreak"
			else if {mcc.tgttosawaf.roundnum} is equal to 6:
				loop all players:
					if {mcc.team.%loop-player's name%} is not equal to 0:
						send title "<pink>Game over!" to loop-player for 3 seconds
				execute console command "/playmusic none"
				set {mcc.tgttosawaf.inprogress} to false
				set {mcc.tgttosawaf.timeleft} to 50
				execute console command "/mccstandings"
			else:
				loop all players:
					if {mcc.team.%loop-player's name%} is not equal to 0:
						send title "<pink>Round over!" to loop-player for 3 seconds
				add 1 to {mcc.tgttosawaf.roundnum}
				execute console command "/mcctgttosawaf %{mcc.tgttosawaf.map.%{mcc.tgttosawaf.roundnum}%}% false"

on gliding state change:
	player's gliding state is true 
	{mcc.tgttosawaf.terraswoopforce} is true
	{canland.%player's name%} is false
	create explosion of force 0
	teleport player to {mcc.tgttosawaf.startinglocs::9}

on region enter:
	if the first 3 characters of "%region%" are "tsf":
		set {canland.%player's name%} to true
		if the first 4 characters of "%region%" are "tsf2":
			message "<lime>Landing gear deployed! It is now safe to land."

on region exit:
	if the first 3 characters of "%region%" are "tsf":
		set {canland.%player's name%} to false 

on stepping on a pressure plate:
	"%event-world%" is equal to "tgttosawaf"
	event-block is stone pressure plate
	loop blocks in radius 2 of event-location:
		if loop-block is lever:
			loop 16 times:
				toggle the loop-block
				wait 3 ticks

on hunger meter change:
	"%player's world%" is equal to "tgttosawaf"
	cancel event

on combust:
	event-entity is a skeleton
	"%event-world%" is equal to "tgttosawaf"
	cancel event

on entity target:
	target is a skeleton	
	"%event-world%" is equal to "tgttosawaf"
	cancel event

on spawn of skeleton:
	"%event-world%" is equal to "tgttosawaf"
	"%spawn reason%" is not equal to "spawn egg"
	cancel event


on rightclick on dispenser:
	event-world is "tgttosawaf"
	player's game mode is survival
	cancel event

on craft:
	event-world is "tgttosawaf"
	cancel event


command /addbarriers <number>:
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			message "<pink>You do not have permission to run this command!"
			exit trigger
		loop blocks in radius 30 of player:
			if loop-block is minecraft:barrier:
				add loop-block to {mcc.tgttosawaf.barriers.%arg 1%::*}

command /blab <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true or the console:
			set {mcc.tgttosawaf.startinglocs::%arg 1%} to player's location
