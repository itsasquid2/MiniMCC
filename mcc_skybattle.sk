variables:
	{mcc.skybattle.borderradius} = 10
	{mcc.skybattle.borderheight} = 70
	{mcc.skybattle.timeleft} = 240
	{mcc.skybattle.kills.%player%} = 0	
	{mcc.skybattle.stage} = 0
	{mcc.skybattle.roundnum} = 0



function mccskbtutorial(p:player):
	wait 3 seconds
	send title "<yellow>Sky Battle" to {_p} for 5 seconds
	wait 5 seconds
	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow>Welcome to Sky Battle!" to {_p}
	send "" to {_p}
	send "<italics>Here's how you play..." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 3 seconds


	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>In Sky Battle, the aim is to remain as the last team standing." to {_p}
	send "" to {_p}
	send "All players begin on their own island. Gather resources, craft, and eliminate your opponents to survive." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 10 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>There are three rounds total, and each round lasts 4 minutes." to {_p}
	send "" to {_p}
	send "<pink>You only get one life per round, so don't do anything stupid. <white><italics>(Yes, falling will kill you...)" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 10 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Over time, the map borders will start to decrease." to {_p}
	send "This is marked out by a particle border." to {_p}
	send "" to {_p}
	send "Luckily, everyone has an infinite amount of concrete, so there's plenty of opportunity to get creative!" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 10 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow><bold>Extra Tips:" to {_p}
	send "" to {_p}
	send "- Look around you. You'll find plenty of bonus resources in all sorts of places." to {_p}
	send "" to {_p}
	send "- Act fast! There's only so much territory, and not enough for everyone to share!" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 10 seconds





function skbrad(time:number) :: number:
	if {mcc.skybattle.overtimetriggered} is true:
		return 0
	else:
		set {_t} to {_time}+20
		if {_t} is greater than or equal to 180:
			set {_e} to 240-{_t}
			return 90-floor({_e}/2)
		else if {_t} is greater than or equal to 120:
			set {_e} to 180-{_t}
			return 60-floor({_e}/2)
		else if {_t} is greater than or equal to 90:
			set {_e} to 120-{_t}
			return 30-floor({_e}/3)
		else if {_t} is greater than or equal to 14:
			set {_e} to 90-{_t}
			return 20-floor({_e}/4)

function skbheight(time:number) :: number:
	set {_t} to {_time}+20
	if {_t} is greater than or equal to 30:
		set {_e} to 240-{_t}
		return 110 - floor({_e}/6)
	else:
		set {_e} to 30-{_t}
		return 75 - floor({_e}/3)	


function skbover() :: boolean:
	delete {_tl::*}
	set {_bla} to 0
	loop all players:
		if loop-player's game mode is survival:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				if {_tl::*} does not contain {mcc.team.%loop-player's name%}:
					add {mcc.team.%loop-player's name%} to {_tl::*}
					add 1 to {_bla}
	if {_bla} is greater than or equal to 2:
		return false
	return true


function skbislands():
	delete {skbperm::*}
	loop numbers from 1 to 10:
		add loop-number to {skbperm::*}
		
	set {skbperm::*} to shuffled {skbperm::*}
	set {mcc.skybattle.playersleft} to 0
	set {mcc.skybattle.borderradius} to 75 
	set {mcc.skybattle.borderheight} to 90 
	loop all players:
		if {mcc.team.%loop-player's name%} is not equal to 0:
			teleport loop-player to {mcc.skybattle.startinglocs.%{skbperm::%{mcc.team.%loop-player's name%}%}%}
			add 1 to {mcc.skybattle.playersleft} 
			set {mcc.skybattle.kills.%loop-player's name%} to 0
			set {immune.%loop-player's name%} to false
			set loop-player's game mode to adventure 
			set loop-player's health to 10
			set loop-player's hunger to 10
			set loop-player's saturation to 5
			delete {skb.hitby.%loop-player's name%}
			clear the loop-player's inventory
			clear loop-player's potion effects
			give a stone sword to the loop-player
			set the loop-player's chestplate to iron chestplate
			giveconc(loop-player)
			give an iron pickaxe of efficiency 3 to the loop-player
			give 8 steak to the loop-player
			give a bow to the loop-player
			set loop-player's level to 0
			set loop-player's level progress to 0

on rightclick with popped chorus fruit:
	player's world is "skybattle"
	if name of player's tool is "levi spark":
		set {_p} to potion effect of levitation of tier 10 without particles for 2 seconds
		add {_p} to potion effects of player
		remove 1 popped chorus fruit from player
	if name of player's offhand tool is "levi spark":
		set {_p} to potion effect of levitation of tier 10 without particles for 2 seconds
		add {_p} to potion effects of player
		remove 1 popped chorus fruit from player




command /skybattletoggleblockstracker <boolean>:
	trigger:
		if {mmcc.hosts::*} contains command sender:
			set {mcc.skybattle.trackarrowsshot} to arg
			message "Toggled block tracking in skybattle to %arg%"

command /skybattleviewblocksplaced:
	trigger:
		if {mmcc.hosts::*} contains command sender:
			set {mcc.skybattle.arrowsshot::*} to sorted {mcc.skybattle.arrowsshot::*}
			loop {mcc.skybattle.arrowsshot::*}:
				loop all players:
					if {mcc.skybattle.arrowsshot::%loop-player%} is equal to loop-value-1:
						message "%loop-player% - %loop-value-1%"


command /mccskbresetmap:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		
		execute console command "/schempaste skybattle_mesa skybattle 0 24 0"
		#execute console command "/schempaste skybattle2 skybattle 0 103 0"
		
		
		#execute console command "/schempaste skbleredux skybattle 0 103 0"
		#execute console command "/schempaste skybattle4 skybattle 0 103 0"
		loop all dropped items in "skybattle":
			delete the loop-entity
		loop all creepers in "skybattle":
			kill the loop-entity
		#broadcast "reset map"
		

on damage:
	world is "skybattlelimbo"
	victim is a player
	cancel event

command /mccskybattle:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				if command sender is not "notcbop":
					message "<pink>You do not have permission to run this command!"
					exit trigger
		set {mcc.skybattle.borderradius} to 140
		set {mcc.skybattle.timeleft} to 120
		set {mcc.skybattle.stage} to 0
		set {mcc.skybattle.roundnum} to 1
		set {mcc.currentevent} to "skybattle"
		set {mcc.skybattle.playersleft} to 0
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				add 1 to {mcc.skybattle.playersleft} 
				set {mcc.skybattle.kills.%loop-player's name%} to 0
				execute console command "/mv tp %loop-player's name% skybattle"
		execute console command "/mccnewgame"
		wait a second 
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				set {immune.%loop-player's name%} to false
				set loop-player's game mode to spectator
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				mccskbtutorial(loop-player)
		teamglow("true")


on break:
	"%event-world%" is equal to "skybattle"
	player's game mode is survival
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event

on inventory click:
	"%event-world%" is equal to "skybattle"
	player's game mode is survival
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event

on place:
	"%event-world%" is equal to "skybattle"
	player's game mode is survival
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event
	
on rightclick on chest:
	"%event-world%" is equal to "skybattle"
	player's game mode is survival
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event

on place of concrete:
	"%player's world%" is equal to "skybattle" 
	player's gamemode is survival
	
	if event-block's y coordinate is less than 48:
		if event-block's y coordinate is more than 10:
			if {mcc.skybattle.trackarrowsshot} is true:
				add 1 to {mcc.skybattle.arrowsshot::%player%}
			wait 1 tick
			if type of player's off hand tool is concrete:
				add 1 to item amount of player's off hand tool
			else:
				give 1 of event-item to player
			
		else:
			cancel event
			send action bar "Sorry, but you can't build there!" to event-player
	else:
		cancel event
		send action bar "Build height for skybattle is 68" to event-player
	
function skbgenparticlecircle(radius:number, amount:number):
	loop {_amount} times:
		set {_angle} to 360/{_amount}*(loop-number - 1)
		#broadcast location({_radius}*sin({_angle}), 23, {_radius}*cos({_angle}), world "skybattle")
		loop 15 times:
			draw 5 of dust using dustOption(red,20) at location({_radius}*sin({_angle}), loop-number-2 * 5, {_radius}*cos({_angle}), world "skybattle")

function skbshouldplayertakeborderdamage(p:player) :: boolean:
	set {_loc} to {_p}'s location
	set y-coord of {_loc} to 0
	if distance between {_loc} and location(0,0,0,world "skybattle") is greater than {mcc.skybattle.borderradius}:
		return true
	else:
		return false

on damage of player:
	"%victim's world%" is equal to "skybattle"
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event
		exit trigger
	if attacker is a player:
		if {mcc.team.%attacker%} is equal to {mcc.team.%victim%}:
			if attacker is not equal to victim:
				send "<pink>You cannot attack teammates!" to attacker
				cancel event
				exit trigger
		else:
			set {skb.hitby.%victim%} to attacker
			set {skb.ctimer.%victim%} to 10
	else if attacker is TNT:
		loop all players:
			if attacker has scoreboard tags "att %loop-player's name%":
				set {skb.hitby.%victim%} to loop-player
				set {skb.ctimer.%victim%} to 10
	else if attacker is a creeper:
		set {_bla} to the first index of "'" in name of attacker
		set {_attackername} to the first {_bla}-1 characters of name of attacker
		loop all players:
			if loop-player's name is equal to {_attackername}:
				set {skb.hitby.%victim%} to loop-player
				set {skb.ctimer.%victim%} to 10
	if damage cause is firework:
		cancel event
on death of player:
	"%victim's world%" is equal to "skybattle"
	if {mcc.skybattle.stage} is not equal to 1:
		cancel event
		exit trigger
	cancel event
	set victim's health to 10
	set victim's hunger to 10
	set victim's saturation to 5
	set victim's gamemode to spectator
	subtract 1 from {mcc.skybattle.playersleft}
	send title "<pink>You died!" to victim for 3 seconds
	if y-coordinate of victim is greater than 0:
		loop items in victim's inventory:
			drop the loop-item
	if victim's y-coordinate is less than 0:
		execute console command "/mv tp %victim% skybattle"	
	else:
		launch ball large colored mcccolor({mcc.team.%victim%}) at victim with duration 0
	clear the victim's inventory
	wait a tick
	if {skb.hitby.%victim%} is set:
		if {mcc.team.%victim%} is not equal to {mcc.team.%{skb.hitby.%victim%}%}:
			add 1 to {mcc.skybattle.kills.%{skb.hitby.%victim%}%}
			ac({skb.hitby.%victim%}, 50, "You killed %victim%!", false)
			youkilled({skb.hitby.%victim%}, victim)
		set {_at} to "<%mcccolor({mcc.team.%{skb.hitby.%victim%}%})%>%{skb.hitby.%victim%}%"
	set {_pl} to "<%mcccolor({mcc.team.%victim%})%>%victim%"
	set {_msg} to "%{_pl}%<white> died"
	if attacker is a player:
		set {_at} to "<%mcccolor({mcc.team.%attacker%})%>%attacker%"
		if damage cause is attack:
			set {_msg} to "%{_pl}% <white>was slain by %{_at}%"
		else if damage cause is projectile:
			set {_msg} to "%{_pl}% <white>was shot by %{_at}%"
		else if damage cause is potion:
			set {_msg} to "%{_pl}% <white>was killed by %{_at}% using magic"
	else if attacker is a zombie or a skeleton or a spider or an enderman or a blaze or a witch or a wither skeleton or an endermite:
		set {_msg} to "%{_pl}% <white>was killed by a monster"
	else if "%damage cause%" is "unknown":
		if {skb.hitby.%victim%} is set:
			set {_msg} to "%{_pl}% <white>didn't want to live in the same world as %{_at}%"
		else:
			set {_msg} to "%{_pl}% <white>fell out of the world"
	else if "%damage cause%" contains "explosion":
		if {skb.hitby.%victim%} is set:
			set {_msg} to "%{_pl}% <white>was blown up by %{_at}%"
		else:
			set {_msg} to "%{_pl}% <white>blew up"
	else if damage cause is fall:
		if {skb.hitby.%victim%} is set:
			set {_msg} to "%{_pl}% <white>fell from a high place while trying to escape %{_at}%" 
		else:
			set {_msg} to "%{_pl}% <white>fell from a high place"
	else if damage cause is lava:
		if {skb.hitby.%victim%} is set:
			set {_msg} to "%{_pl}%<white> tried to swim in lava while trying to escape %{_at}%" 
		else:
			set {_msg} to "%{_pl}% <white>tried to swim in lava"
	else if damage cause is fire:
		if {skb.hitby.%victim%} is set:
			set {_msg} to "%{_pl}%<white> burnt to a crisp while trying to escape %{_at}%" 
		else:
			set {_msg} to "%{_pl}% <white>burnt to a crisp"
	#else if damage cause is wither:
	#	set {_msg} to "%{_pl}% <white>withered away"
	#else if damage cause is falling block:
	#	set {_msg} to "%{_pl}% <white>was hit by a falling block"
	else if damage cause is suffocation:
		set {_msg} to "%{_pl}% <white>suffocated"
	broadcast formatted {_msg}
	loop all players:
		if {mcc.team.%loop-player's name%} is not equal to 0:
			if loop-player's game mode is survival:
				bac(loop-player, 2, "Survived 1 place")
	if skbover() is true:
		set {mcc.skybattle.overtimetriggered} to true
		set {mcc.skybattle.timeleft} to 0


every second:
	
	if {mcc.paused} is true:
		exit trigger
	if {mcc.currentevent} is not equal to "skybattle":
		exit trigger
	if {mcc.skybattle.timeleft} is greater than 0:
		subtract 1 from {mcc.skybattle.timeleft}
		if {mcc.skybattle.stage} is equal to 1:
			set {mcc.skybattle.borderradius} to skbrad({mcc.skybattle.timeleft})
			set {mcc.skybattle.borderheight} to skbheight({mcc.skybattle.timeleft})
			skbgenparticlecircle({mcc.skybattle.borderradius},({mcc.skybattle.borderradius}*2*3.1415)/3+10)
		loop all players:
			if loop-player's game mode is survival or adventure:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					if "%loop-player's world%" is equal to "skybattle":
						if loop-player's y-coordinate is less than 0:
							if {mcc.skybattle.stage} is equal to 1:
								damage loop-player by 100 hearts 
							else:
								teleport loop-player to {mcc.skybattle.startinglocs.%{skbperm::%{mcc.team.%loop-player's name%}%}%}
						if skbshouldplayertakeborderdamage(loop-player) is true:
							damage loop-player by 1 heart
						
				if {mcc.team.%loop-player's name%} is not equal to 0:
					if {skb.ctimer.%loop-player's name%} is greater than 0:
						subtract 1 from {skb.ctimer.%loop-player's name%}
					else:
						delete {skb.hitby.%loop-player's name%}
		if {mcc.skybattle.timeleft} is equal to 10:
			if {mcc.skybattle.stage} is equal to 0:
				execute console command "/mccskbresetmap"
				set {mcc.skybattle.overtimetriggered} to false
				wait 2 second
				skbislands()
			
		else if {mcc.skybattle.timeleft} is equal to 3:
			if {mcc.skybattle.stage} is equal to 0:
				loop all players:
					if {mcc.team.%loop-player's name%} is not equal to 0:
						execute console command "/boopboopboopbeep %loop-player's name%"
		else if {mcc.skybattle.timeleft} is equal to 1:
			if {mcc.skybattle.stage} is equal to 0:

				execute console command "/playmusic skybattle"
	else if {mcc.skybattle.timeleft} is equal to 0:
		if {mcc.skybattle.stage} is equal to 0:
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:	
					loop blocks in radius 7 around loop-player:
						if loop-block is barrier block:
							set loop-block to air
					set loop-player's game mode to survival
			set {mcc.skybattle.stage} to 1
			set {mcc.skybattle.timeleft} to 240
			
			
		else if {mcc.skybattle.stage} is equal to 1:
			if {mcc.skybattle.overtimetriggered} is false:
				set {mcc.skybattle.timeleft} to 30
				set {mcc.skybattle.overtimetriggered} to true
				send title "<red>Overtime!" to all players
			else:
				delete {_bl::*} 
				execute console command "/playmusic none"
				loop all players:
					if loop-player's game mode is survival:
						ac(loop-player, 50, "You survived the entire round!", true)
						add "<%mcccolor({mcc.team.%loop-player's name%})%>%loop-player's name%" to {_bl::*}
				if size of {_bl::*} is equal to 1:
					broadcast formatted "[<gold><bold>Sky Battle<white>] The winner of this round is %{_bl::1}%!" 
				else:
					broadcast formatted "[<gold><bold>Sky Battle<white>] The winners of this round are %{_bl::*}%!" 
				if {mcc.skybattle.roundnum} is equal to 3:
					loop all players:
						if {mcc.team.%loop-player's name%} is not equal to 0:
							send title "<pink>Game over!" to loop-player for 3 seconds
					set {mcc.skybattle.overtimetriggered} to false
					set {mcc.skybattle.stage} to 2
					set {mcc.skybattle.timeleft} to 30
					execute console command "/mccstandings"		
				else:
					loop all players:
						if {mcc.team.%loop-player's name%} is not equal to 0:
							send title "<pink>Round over!" to loop-player for 3 seconds
					set {mcc.skybattle.overtimetriggered} to false
					add 1 to {mcc.skybattle.roundnum} 
					set {mcc.skybattle.stage} to 0
					set {mcc.skybattle.timeleft} to 20
		else if {mcc.skybattle.stage} is equal to 2:
			execute console command "/mccbreak"
			set {mcc.skybattle.timeleft} to -1


on craft of shield:
	"%player's world%" is equal to "skybattle"
	message "<pink>This recipe is disabled!"
	cancel event

