command /mccbattlebox:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				message "<pink>You do not have permission to run this command!"
				exit trigger
		execute console command "/mccnewgame"
		set {mcc.currentevent} to "battlebox"
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				execute console command "/mvtp %loop-player's name% battlebox"
				mccbbtutorial(loop-player)
				set {immune.%loop-player's name%} to false
				wait a tick
				set loop-player's game mode to adventure
		set {_over} to false
		set {mcc.bb.timeleft} to 30
		wait 30 seconds
		set {mcc.bb.round} to 1
		roundrobin()

command /tptest:
	permission: op
	trigger:
		bbtptostart()

function bbtptostart():
	loop all players:
		loop blocks in radius 15 around loop-player:
			if loop-block is calcite:
				teleport loop-player to location(x-coordinate of loop-block, (y-coordinate of loop-block)+1, (z-coordinate of loop-block), world "battlebox", yaw of loop-player, pitch of loop-player)

on break:
	world is "battlebox"
	if block below event-block isn't bedrock:
		cancel event

function roundrobin():
	delete {_teamlist::*}
	loop all players:
		if {_teamlist::*} doesn't contain {mcc.team.%loop-player's name%}:
			add {mcc.team.%loop-player's name%} to {_teamlist::*}
	if mod(size of {_teamlist::*},2) isn't 0:
		add "Bye" to {_teamlist::*}
	loop (size of {_teamlist::*})/2 times:
		add {_teamlist::%loop-number%} to {_row1::*}
		add {_teamlist::%size of {_teamlist::*} - loop-number + 1%} to {_row2::*}
	set {mcc.bb.roundamount} to size of {_teamlist::*} - 1
	loop size of {_teamlist::*} - 1 times:
		loop size of {_row1::*} times:
			execute console command "/mccbb %{_row1::%loop-number-2%}% %{_row2::%loop-number-2%}% %loop-counter-2%"
		set {_last1} to last element of {_row1::*}
		remove {_last1} from {_row1::*}
		set {_first2} to first element of {_row2::*}
		remove {_first2} from {_row2::*}
		set {_size} to size of {_row1::*}
		loop {_size} - 1 times:
			set {_row1::%{_size} - loop-number-2 + 2%} to {_row1::%{_size} - loop-number-2 + 1%}
		set {_row1::2} to {_first2}
		set {_size} to size of {_row2::*}
		loop {_size} times:
			set {_row2::%loop-number-2%} to {_row2::%loop-number-2 + 1%}
		set {_row2::%{_size} + 1%} to {_last1}
		set {mcc.bb.ready} to false
		while {mcc.bb.ready} is false:
			wait 1 second
		
		add 1 to {mcc.bb.round}
		loop all players:
			set {mcc.battlebox.abilitycooldown.%loop-player%} to 0
		if {mcc.bb.round} is {mcc.bb.roundamount}:
			set {_over} to true
		if {_over} is true:
			set {mcc.bb.timeleft} to 30
			set {mcc.bb.inprogress} to false
			set {mcc.bb.kits} to false
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					send title "<pink>Game over!" to loop-player for 3 seconds
					set loop-player's gamemode to spectator
			execute console command "/mccstandings"
			wait 30 seconds
			execute console command "/mccbreak"
			exit trigger
		if {_over} isn't true:
			set {mcc.bb.timeleft} to 30
			set {mcc.bb.inprogress} to false
			set {mcc.bb.kits} to false
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					send title "<pink>Game over!" to loop-player for 3 seconds
					set loop-player's gamemode to spectator
			execute console command "/mccstandings"
			wait 30 seconds
			execute console command "/mccbreak"
		

				
command /mccbb <number> <number> <number>:
	permission: op
	trigger:
		if {mmcc.hoster.%command sender%} isn't true:
			if command sender isn't the console:
				message "<red>No"
				exit trigger
		set {mcc.currentevent} to "battlebox"
		set {mcc.bb.opponent.%arg 1%} to arg 2
		set {mcc.bb.opponent.%arg 2%} to arg 1
		set {mcc.bb.teama.%arg 3%} to arg 1
		set {mcc.bb.teamb.%arg 3%} to arg 2
		loop all players:
			if {mcc.team.%loop-player's name%} is equal to arg 1:
				remove speed from the loop-player
				teleport loop-player to {mcc.bb.spawnpoints.%arg 3%.teama}
				set loop-player's game mode to adventure
				clear loop-player's inventory
				heal loop-player
				feed loop-player
				send title "Round %{mcc.bb.round}%" with subtitle "%{mcc.teams::%arg 1%}% <white>vs. %{mcc.teams::%arg 2%}%" to loop-player for 3 seconds
				set slot 8 of loop-player to recovery compass named "<purple>Kit Selection"
			else if {mcc.team.%loop-player's name%} is equal to arg 2:
				remove speed from the loop-player
				teleport loop-player to {mcc.bb.spawnpoints.%arg 3%.teamb}
				set loop-player's game mode to adventure
				clear loop-player's inventory
				heal loop-player
				feed loop-player
				send title "Round %{mcc.bb.round}%" with subtitle "%{mcc.teams::%arg 1%}% <white>vs. %{mcc.teams::%arg 2%}%" to loop-player for 3 seconds
				set slot 8 of loop-player to recovery compass named "<purple>Kit Selection"
				
		set {mcc.bb.timeleft} to 40
		set {mcc.bb.kits} to true
		loop all players:
			delete {mcc.bb.kittaken.%loop-player%}
		loop 10 times:
			set {_temp} to chest inventory with 5 rows
			loop 45 times:
				set slot loop-number-2 of {_temp} to slot loop-number-2 of {mcc.bb.defaultkitselect}
			set {mcc.bb.kitselect.%loop-number%} to {_temp}
			delete {_temp}

command /bbsetspawn <number> <text>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.bb.spawnpoints.%arg 1%.%arg 2%} to player's location
			broadcast "%{mcc.bb.spawnpoints.%arg 1%.%arg 2%}%"

on rightclick:
	player's world is "battlebox"
	player's tool is recovery compass
	{mcc.bb.kits} is true
	open {mcc.bb.kitselect.%{mcc.team.%player's name%}%} to player

on inventory click:
	player's world is "battlebox"
	player's current inventory is {mcc.bb.kitselect.%{mcc.team.%player's name%}%}
	cancel event
	if slot floor(index of event-slot/9)*9 of {mcc.bb.kitselect.%{mcc.team.%player's name%}%} isn't player head:
		if {mcc.bb.selectedkit.%player's name%} is set:
			set slot {mcc.bb.selectedkit.%player's name%}*9 of {mcc.bb.kitselect.%{mcc.team.%player's name%}%} to air
		set {mcc.bb.selectedkit.%player's name%} to floor(index of event-slot/9)
		set slot {mcc.bb.selectedkit.%player's name%}*9 of {mcc.bb.kitselect.%{mcc.team.%player's name%}%} to player's skull
		
	else:
		message "<red>This kit is already taken, please choose another kit."

command /openbattleboxdefaultkitselect:
	permission: op
	trigger:
		if {mcc.bb.defaultkitselect} isn't set:
			set {mcc.bb.defaultkitselect} to chest inventory with 5 rows
		open {mcc.bb.defaultkitselect} to player
		loop 45 times:
			set slot loop-number of {mcc.bb.defaultkitselect} to {mcc.bb.defaultkitselectstorage::%loop-number%}

on inventory close:
	if event-inventory is {mcc.bb.defaultkitselect}:
		loop 45 times:
			set {mcc.bb.defaultkitselectstorage::%loop-number%} to slot loop-number of {mcc.bb.defaultkitselect}

function givekittoplayer(p:player):
	loop 7 times:
		give slot ({mcc.bb.selectedkit.%{_p}'s name%}*9 + loop-number + 1) of {mcc.bb.defaultkitselect} to {_p}

command /bbsetdeadspawn <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.bb.deadspawn.%{arg 1}%} to player's location

command /bbendgame <number> <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			mccbbendgame(arg 1, arg 2)

function mccbbendgame(n:number, awon:number):
	set {_over} to false
	if {_awon} is equal to 1:
		broadcast "[<gold><bold>Battle Box<white>] %{mcc.teams::%{mcc.bb.teama.%{_n}%}%}% <white>have defeated %{mcc.teams::%{mcc.bb.teamb.%{_n}%}%}%!"
	else if {_awon} is equal to -1:
		broadcast "[<gold><bold>Battle Box<white>] %{mcc.teams::%{mcc.bb.teamb.%{_n}%}%}% <white>have defeated %{mcc.teams::%{mcc.bb.teama.%{_n}%}%}%!"
	else:
		broadcast "[<gold><bold>Battle Box<white>] %{mcc.teams::%{mcc.bb.teama.%{_n}%}%}% <white>have tied with %{mcc.teams::%{mcc.bb.teamb.%{_n}%}%}%!"
	loop all entities in radius 50 of {mcc.bb.deadspawn.%{_n}%}:
		if "%loop-entity%" contains "dropped splash" or "creeper" or "arrow": 
			delete the loop-entity
	loop all players:
		if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teama.%{_n}%}:
			set loop-player's game mode to spectator
			close the loop-player's inventory
			if {_awon} is equal to 1:
				send title "<lime>Your team won!" with subtitle "<lime>Well played!"  to loop-player for 3 seconds
				set {_bla} to 0
				loop all players:
					if {mcc.team.%loop-player-2's name%} is equal to {mcc.team.%loop-player-1's name%}:
						add 1 to {_bla}
				ac(loop-player, ceil(160/{_bla}), "Your team won this round!", false)
			else if {_awon} is equal to -1:
				send title "<pink>Your team lost!" with subtitle "<pink>You'll get 'em next time, champ!" to loop-player for 3 seconds
			else:
				send title "Ohhh!" with subtitle "It's a tie!!!!!!!" to loop-player for 3 seconds
				set {_bla} to 0
				loop all players:
					if {mcc.team.%loop-player-2's name%} is equal to {mcc.team.%loop-player-1's name%}:
						add 1 to {_bla}
				ac(loop-player, ceil(80/{_bla}), "Your team tied this round!", false)
		if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teamb.%{_n}%}:
			set loop-player's game mode to spectator
			if {_awon} is equal to -1:
				send title "<lime>Your team won!" with subtitle "<lime>Well played!"  to loop-player for 3 seconds
				set {_bla} to 0
				loop all players:
					if {mcc.team.%loop-player-2's name%} is equal to {mcc.team.%loop-player-1's name%}:
						add 1 to {_bla}
				ac(loop-player, ceil(160/{_bla}), "Your team won this round!", false)
			else if {_awon} is equal to 1:
				send title "<pink>Your team lost!" with subtitle "<pink>You'll get 'em next time, champ!" to loop-player for 3 seconds
			else:
				send title "Ohhh!" with subtitle "It's a tie!!!!!!!" to loop-player for 3 seconds
				set {_bla} to 0
				loop all players:
					if {mcc.team.%loop-player-2's name%} is equal to {mcc.team.%loop-player-1's name%}:
						add 1 to {_bla}
				ac(loop-player, ceil(80/{_bla}), "Your team tied this round!", false)
	delete {mcc.bb.teama.%{_n}%}
	delete {mcc.bb.teamb.%{_n}%}
	loop blocks in radius 30 of {mcc.bb.center.%{_n}%}:
		if loop-block is cobweb or jungle leaves:
			set loop-block to air
		if loop-block is wool:
			set loop-block to white wool
	loop blocks in radius 4 of {mcc.bb.center.%{_n}%}:
		if loop-block is bedrock:
			if block above loop-block is air or wool:
				set block above loop-block to white wool
	

	# loop all players:
	# 	set {mcc.%loop-player's name%.haskit} to false
	# 	clear loop-player's inventory
	# 	clear all potion effects of loop-player




command /setcenterbb <number>:
	permission: op
	trigger:
		set {mcc.bb.center.%arg 1%} to player's position



on hunger meter change:
	player's world is "battlebox"
	cancel event

on damage:
	"%victim's world%" is equal to "battlebox"
	
	if attacker is a player:
		if {mcc.team.%attacker%} is equal to {mcc.team.%victim%}:
			if attacker is not equal to victim:
				exit trigger
	if damage cause is fall:
		exit trigger
	damage is greater than or equal to victim's health
	set {_good} to false
	loop 20 times:
		if {mcc.bb.teama.%loop-number%} is equal to {mcc.team.%victim%}:
			set {_good} to true
		else if {mcc.bb.teamb.%loop-number%} is equal to {mcc.team.%victim%}:
			set {_good} to true
	if {_good} is true:	
		if attacker is a player:
			if {mcc.team.%victim%} is not equal to {mcc.team.%attacker%}:
				ac(attacker, 15, "You killed %victim%!", false)
				youkilled(attacker, victim)
			if damage cause is attack:
				bbbr({mcc.team.%attacker%},{mcc.team.%victim%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>was slain by <%mcccolor({mcc.team.%attacker%})%>%attacker%")
			else if "%damage cause%" is equal to "projectile":
				bbbr({mcc.team.%attacker%},{mcc.team.%victim%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>was shot by <%mcccolor({mcc.team.%attacker%})%>%attacker%")
			else:
				bbbr({mcc.team.%attacker%},{mcc.team.%victim%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>was killed by <%mcccolor({mcc.team.%attacker%})%>%attacker% <white>using magic")
		else if attacker is a creeper:
			set {_bla} to the first index of "'" in "%name of attacker%"
			set {_attackername} to the first {_bla}-1 characters of "%name of attacker%"
			loop all players:
				if "%loop-player's name%" is equal to {_attackername}:
					set {_atkr} to loop-player
			if {_atkr} is set:
				bbbr({mcc.team.%{_atkr}%},{mcc.team.%victim%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>was blown up by <%mcccolor({mcc.team.%{_atkr}%})%>%{_atkr}%")
				if {mcc.team.%{_atkr}%} is not equal to {mcc.team.%victim%}:
					ac({_atkr}, 15, "You killed %victim%!", false)	
					youkilled({_atkr}, victim)
			else:
				bbbr({mcc.team.%victim%},{mcc.bb.opponent.%{mcc.team.%victim%}%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>blew up")
		else:
			bbbr({mcc.team.%victim%},{mcc.bb.opponent.%{mcc.team.%victim%}%},"[<gold><bold>Battle Box<white>] <%mcccolor({mcc.team.%victim%})%>%victim% <white>died")
		set damage to 0
		wait a tick
		set victim's health to 10
		loop 20 times:
			if {mcc.bb.teama.%loop-number%} is equal to {mcc.team.%victim%}:
				teleport victim to {mcc.bb.deadspawn.%loop-number%}
				set victim's game mode to spectator
			else if {mcc.bb.teamb.%loop-number%} is equal to {mcc.team.%victim%}:
				teleport victim to {mcc.bb.deadspawn.%loop-number%}
				set victim's game mode to spectator

function givewool(p:player, c:number):
	set {_color} to "white"
	if {_c} is 1:
		set {_color} to "red"
	if {_c} is 2:
		set {_color} to "orange"
	if {_c} is 3:
		set {_color} to "yellow"
	if {_c} is 4:
		set {_color} to "lime"
	if {_c} is 5:
		set {_color} to "green"
	if {_c} is 6:
		set {_color} to "cyan"
	if {_c} is 7:
		set {_color} to "light_blue"
	if {_c} is 8:
		set {_color} to "blue"
	if {_c} is 9:
		set {_color} to "purple"
	if {_c} is 10:
		set {_color} to "pink"
	execute console command "/give %{_p}'s name% %{_color}%_wool[can_place_on={predicates:[{blocks:blue_wool},{blocks:bedrock},{blocks:cyan_wool},{blocks:green_wool},{blocks:lime_wool},{blocks:light_blue_wool},{blocks:magenta_wool},{blocks:red_wool},{blocks:purple_wool},{blocks:yellow_wool},{blocks:white_wool}],show_in_tooltip:false}] 64"
	execute console command "/give %{_p}'s name% shears[can_break={predicates:[{blocks:wool}],show_in_tooltip:false}] 1"

function setboots(p:player, c:number):
	set {_p}'s boots to leather boots
	if {_c} is 1:
		dye {_p}'s boots red
	if {_c} is 2:
		dye {_p}'s boots orange
	if {_c} is 3:
		dye {_p}'s boots yellow
	if {_c} is 4:
		dye {_p}'s boots lime
	if {_c} is 5:
		dye {_p}'s boots green
	if {_c} is 6:
		dye {_p}'s boots cyan
	if {_c} is 7:
		dye {_p}'s boots light blue
	if {_c} is 8:
		dye {_p}'s boots blue
	if {_c} is 9:
		dye {_p}'s boots purple
	if {_c} is 10:
		dye {_p}'s boots pink
	
on drop:
	world is "battlebox"
	cancel event

on rightclick:
	player's world is "battlebox"
	
	if player's tool is a heart of the sea:
	#broadcast player's target
		if player's target is a player:
			#broadcast {mcc.team.%player's target's name%}
			if {mcc.team.%player's target's name%} is equal to {mcc.team.%player's name%}:
				#broadcast {mcc.battlebox.abilitycooldown.%player%}
				if {mcc.battlebox.abilitycooldown.%player%} is less than 1:
					damage player by 2 hearts
					heal player's target by 3 hearts
					set {mcc.battlebox.abilitycooldown.%player%} to 2
	if player's tool is end crystal:
		if {mcc.battlebox.abilitycooldown.%player%} is less than 1:
			create safe explosion of force (player's health^(1/3)) at player's location
			set {mcc.battlebox.abilitycooldown.%player%} to 60
	if player's tool is obsidian:
		if {mcc.battlebox.abilitycooldown.%player%} is less than 1:
			set {mcc.battlebox.parrying.%player%} to true
			set glowing of player to true
			set {mcc.battlebox.abilitycooldown.%player%} to 10
			wait 0.3 seconds
			if {mcc.battlebox.parrying.%player%} is true:
				set {mcc.battlebox.parrying.%player%} to false
				set glowing of player to false
				apply slowness of tier 2 to player for 2 seconds
				message "You did not parry an attack!" to event-player
	if player's tool is feather:
		if {mcc.battlebox.abilitycooldown.%player%} is less than 1:
			set {mcc.battlebox.abilitycooldown.%player%} to 5
			push player forward at speed 2

on player jump:
	player's world is "battlebox"
	if player has potion slowness:
		message "<red>You cannot jump while slowed!"
		cancel event
	

on damage:
	if {mcc.battlebox.parrying.%victim%} is true:
		cancel event
		set {_v} to vector between victim and the location 2 block above attacker's location
		broadcast {_v}
		push attacker {_v} at speed 2
		set {mcc.battlebox.parrying.%victim%} to false
		set glowing of victim to false
		message "Your attack was parried!" to attacker
		message "Successfully parried an attack!" to victim

every second:
	loop all players in world "battlebox":
		if {mcc.battlebox.abilitycooldown.%loop-player%} isn't set:
			set {mcc.battlebox.abilitycooldown.%loop-player%} to 0
		if {mcc.battlebox.abilitycooldown.%loop-player%} is more than 0:
			subtract 1 from {mcc.battlebox.abilitycooldown.%loop-player%}
			send action bar "Ability Cooldown: <light cyan>%{mcc.battlebox.abilitycooldown.%loop-player%}%<reset> Seconds" to loop-player

on damage of item frame:
	world is "battlebox"
	cancel event

command /givewool <player> <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			givewool(arg 1, arg 2)

function bbbr(n1: number, n2: number, t:text):
	loop all players:
		if {mcc.team.%loop-player's name%} is equal to {_n1} or {_n2} or 0:
			send formatted {_t} to loop-player

function teleportplayers(n:number, t:text):
	loop all players:
		broadcast "%{mcc.team.%loop-player's name%}%"
		broadcast "%{mcc.bb.%{_t}%.%{_n}%}%"
		broadcast "%{_t}%.%{_n}%"
		if {mcc.team.%loop-player's name%} is {mcc.bb.%{_t}%.%{_n}%}:
			teleport loop-player to {mcc.bb.spawnpoints.%{_n}%.%{_t}%}
			broadcast "%{mcc.bb.spawnpoints.%{_n}%.%{_t}%}%"
			broadcast "%{_n}%.%{_t}%"

command /teleportplayers <number> <text>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			teleportplayers(arg 1, arg 2)
on place:
	"%player's world%" is equal to "battlebox"
	player's game mode is adventure
	if event-block is white wool:
		exit trigger
	if block below event-block isn't bedrock:
		cancel event
	set {_count} to 0
	if {mcc.team.%player's name%} is equal to 1:
		set {_ba} to red wool
	else if {mcc.team.%player's name%} is equal to 2:
		set {_ba} to orange wool
	else if {mcc.team.%player's name%} is equal to 3:
		set {_ba} to yellow wool
	else if {mcc.team.%player's name%} is equal to 4:
		set {_ba} to lime wool
	else if {mcc.team.%player's name%} is equal to 5:
		set {_ba} to green wool
	else if {mcc.team.%player's name%} is equal to 6:
		set {_ba} to cyan wool
	else if {mcc.team.%player's name%} is equal to 7:
		set {_ba} to light blue wool
	else if {mcc.team.%player's name%} is equal to 8:
		set {_ba} to blue wool
	else if {mcc.team.%player's name%} is equal to 9:
		set {_ba} to purple wool
	else if {mcc.team.%player's name%} is equal to 10:
		set {_ba} to pink wool
	loop blocks in radius 4 of event-location:
		if loop-block is {_ba}:
			add 1 to {_count}
	if {_count} is equal to 9: 
		loop 20 times:
			if {mcc.team.%player's name%} is equal to {mcc.bb.teama.%loop-number%}:
				mccbbendgame(loop-number, 1)
			else if {mcc.team.%player's name%} is equal to {mcc.bb.teamb.%loop-number%}:
				mccbbendgame(loop-number, -1)


on damage:
	if event-world is "battlebox":
		if damage cause is fall:
			cancel event
		if attacker is a player:
			if {mcc.team.%attacker%} is equal to {mcc.team.%victim%}:
				if attacker is not equal to victim:
					send "<pink>You cannot attack teammates!" to attacker
					cancel event

on spawn:
	"%event-world%" is equal to "battlebox"
#	if first 3 characters of "%event-entity%" is equal to "zom":
#		cancel event
#		exit trigger
#	if "%event-entity%" is equal to "slime" or "skeleton" or "spider" or "creeper" or "enderman":
	if "%event-entity%" is not equal to "creeper" or "arrow" or "spectral arrow" or "thrown potion" or "dropped splash potions of strong harming" or "item frame":
		cancel event
		exit trigger
	if "%event-entity%" is equal to "creeper":
		if "%spawn reason%" is not equal to "spawn egg":
			cancel event
			exit trigger
		if {mcc.bb.kits} is true:
			if {mcc.bb.timeleft} is less than 10:
				cancel event	



every second:
	if {mcc.paused} is true:
		exit trigger
	if {mcc.bb.timeleft} is greater than 0:
		subtract 1 from {mcc.bb.timeleft}
		if {mcc.bb.timeleft} is equal to 10:
			if {mcc.bb.kits} is true:
				bbtptostart()
				loop 20 times:
					loop {mcc.bb.cages.%loop-value%::*}:
						set block at loop-value-2 to gray stained glass 
					if {mcc.bb.teama.%loop-value%} is set:
						loop all players:
							if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teama.%loop-value-1%}:
								givekittoplayer(loop-player)
								givewool(loop-player, {mcc.team.%loop-player's name%})
								setboots(loop-player, {mcc.team.%loop-player's name%})
								set loop-player's game mode to adventure
								set loop-player's health to 10
								set loop-player's hunger to 10
								set loop-player's saturation to 5
							if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teamb.%loop-value-1%}:
								givekittoplayer(loop-player)
								givewool(loop-player, {mcc.team.%loop-player's name%})
								setboots(loop-player, {mcc.team.%loop-player's name%})
								set loop-player's game mode to adventure
								set loop-player's health to 10
								set loop-player's hunger to 10
								set loop-player's saturation to 5
		else if {mcc.bb.timeleft} is equal to 2:
			if {mcc.bb.kits} is true:
				loop 20 times:
					if {mcc.bb.teama.%loop-value%} is set:
						loop all players:
							if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teama.%loop-value-1%}:
								execute console command "/boopboopboopbeep %loop-player's name%"
							if {mcc.team.%loop-player's name%} is equal to {mcc.bb.teamb.%loop-value-1%}:
								execute console command "/boopboopboopbeep %loop-player's name%"
	else:
		if {mcc.bb.kits} is true:
			set {mcc.bb.kits} to false
			set {mcc.bb.timeleft} to 60
			set {mcc.bb.inprogress} to true
			loop all players:
				loop blocks in radius 10 around loop-player:
					if loop-block is gray stained glass:
						set loop-block to air
			loop 20 times:
				if {mcc.bb.teama.%loop-value%} is set:
					loop {mcc.bb.center.%loop-value%::*}:
						set block at loop-value-2 to white wool
		else if {mcc.bb.inprogress} is true:
			set {mcc.bb.inprogress} to false
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					send title "<pink>Round over!" to loop-player for 3 seconds
			loop 20 times:
				if {mcc.bb.teama.%loop-value%} is set:
					if {mcc.bb.teama.%loop-value%} is equal to 1:
						set {_ba} to red wool
					else if {mcc.bb.teama.%loop-value%} is equal to 2:
						set {_ba} to orange wool
					else if {mcc.bb.teama.%loop-value%} is equal to 3:
						set {_ba} to yellow wool
					else if {mcc.bb.teama.%loop-value%} is equal to 4:
						set {_ba} to lime wool
					else if {mcc.bb.teama.%loop-value%} is equal to 5:
						set {_ba} to green wool
					else if {mcc.bb.teama.%loop-value%} is equal to 6:
						set {_ba} to cyan wool
					else if {mcc.bb.teama.%loop-value%} is equal to 7:
						set {_ba} to light blue wool
					else if {mcc.bb.teama.%loop-value%} is equal to 8:
						set {_ba} to blue wool
					else if {mcc.bb.teama.%loop-value%} is equal to 9:
						set {_ba} to purple wool
					else if {mcc.bb.teama.%loop-value%} is equal to 10:
						set {_ba} to pink wool
					loop blocks in radius 4 of {mcc.bb.center.%loop-number%}:
						if loop-block is {_ba}:
							add 1 to {_count1}
					if {mcc.bb.teamb.%loop-value%} is equal to 1:
						set {_ba} to red wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 2:
						set {_ba} to orange wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 3:
						set {_ba} to yellow wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 4:
						set {_ba} to lime wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 5:
						set {_ba} to green wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 6:
						set {_ba} to cyan wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 7:
						set {_ba} to light blue wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 8:
						set {_ba} to blue wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 9:
						set {_ba} to purple wool
					else if {mcc.bb.teamb.%loop-value%} is equal to 10:
						set {_ba} to pink wool
					loop blocks in radius 4 of {mcc.bb.center.%loop-number%}:
						if loop-block is {_ba}:
							add 1 to {_count2}
					if {_count1} is greater than {_count2}:
						mccbbendgame(loop-value, 1)	
					else if {_count1} is less than {_count2}:
						mccbbendgame(loop-value, -1)	
					else:
						mccbbendgame(loop-value, 0)	
			loop all dropped items in "battlebox":
				delete the loop-entity 
			set {mcc.bb.ready} to true
			#roundrobin()

command /register <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			loop blocks in radius 20 around player:
				if loop-block is gray stained glass:
					add loop-block to {mcc.bb.cages.%arg 1%::*}

function mccbbtutorial(p:player):
	wait 3 seconds
	send title "<yellow>Battle Box" to {_p} for 5 seconds
	wait 5 seconds
	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow>Welcome to Battle Box!" to {_p}
	send "" to {_p}
	send "<italics>Here's how you play..." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 3 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Battle Box is a team vs. team PVP game." to {_p}
	send "" to {_p}
	send "You will play every other team, round-robin style." to {_p}
	send "" to {_p}
	send "<pink>In each round, you only have 1 minute and 1 life." to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Your team's objective is to fill the wool square in the center completely with your team's wool." to {_p}
	send "" to {_p}
	send "The other team is trying to do the same, so killing them might make that easier!" to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow><bold>Extra tips:" to {_p}
	send "" to {_p}
	send "- There are instant damage potions at the center of the map!" to {_p}
	send "" to {_p}
	send "- Use your shears to break the wool." to {_p}
	send "" to {_p}
	send "- Each player may choose a bonus item before the start of each round!" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}