variables:
	{bouncepadcooldown.%player%} = false
	{flycooldown.%player%} = false
	{mcc.acerace.checkpoint.%player%} = 0
	{mcc.acerace.lapsdone.%player%} = 0
	{mcc.acerace.playersdone} = 0
	{mcc.acerace.timeleft} = 0
	{mcc.acerace.stage} = 0
	{mcc.acerace.mapnum} = 3

command /setacerace <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.acerace.mapnum} to arg 1

command /fixacerace:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.acerace.official} to false

command /setbarrieracerace:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			loop blocks in radius 12 of player:
				if loop-block is minecraft:barrier:
					add loop-block to {mcc.acerace.barriers::*}
					broadcast "barriered"

command /removebarrieracerace <text>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			loop {mcc.acerace.barriers::*}:
				if "%world of loop-value%" is arg:
					remove loop-value from {mcc.acerace.barriers::*}
			message "unbarriered"	

function mccaceracenextcp(p:player) :: location:
	set {_n} to mod({mcc.acerace.checkpoint.%{_p}%} + 2, 12)
	if {_p}'s world is "acerace":
		return {mcc.acerace.checkpoints::%{_n}%}
	else if {_p}'s world is "acerace2":
		return {mcc.acerace2.checkpoints::%{_n}%}
	else if {_p}'s world is "acerace3":
		return {mcc.acerace3.checkpoints::%{_n}%}
	else if {_p}'s world is "acerace4":
		return {mcc.acerace4.checkpoints::%{_n}%}

function mccaceracescore(p:player) :: number:
	return {mcc.acerace.lapsdone.%{_p}%}*10000+{mcc.acerace.checkpoint.%{_p}%}*100 - floor(distance between {_p} and mccaceracenextcp({_p}))/10
	
on region enter:
	world is "acerace4"
	if the first 2 characters of "%region%" are "ra":
		set the player's chestplate to air

function mccupdateaceracescores():
	loop all players:
		if {mcc.team.%loop-player's name%} is not equal to 0:
			set {mcc.acerace.score.%loop-player's name%} to mccaceracescore(loop-player)
	
on region enter:
	world is "acerace4"
	if the first 5 characters of "%region%" are "windn":
		add player to {mcc.acerace.windnorth::*}
	else if the first 5 characters of "%region%" are "winds":
		add player to {mcc.acerace.windsouth::*}
	else if the first 5 characters of "%region%" are "winde":
		add player to {mcc.acerace.windeast::*}
	else if the first 5 characters of "%region%" are "windw":
		add player to {mcc.acerace.windwest::*}

on region exit:
	world is "acerace4"
	if the first 5 characters of "%region%" are "windn":
		remove player from {mcc.acerace.windnorth::*}
	else if the first 5 characters of "%region%" are "winds":
		remove player from {mcc.acerace.windsouth::*}
	else if the first 5 characters of "%region%" are "winde":
		remove player from {mcc.acerace.windeast::*}
	else if the first 5 characters of "%region%" are "windw":
		remove player from {mcc.acerace.windwest::*}


every tick:
	loop {mcc.acerace.windnorth::*}:
		set {_regions::*} to regions at loop-value's location
		if {_regions::*} is set:
			loop {_regions::*}:
				if the first 5 characters of "%loop-value-2%" are "windn":
					push loop-value-1 north with speed 0.05
		else:
			remove loop-value from {mcc.acerace.windnorth::*}
	loop {mcc.acerace.windsouth::*}:
		set {_regions::*} to regions at loop-value's location
		if {_regions::*} is set:
			loop {_regions::*}:
				if the first 5 characters of "%loop-value-2%" are "winds":
					push loop-value-1 south with speed 0.05
		else:
			remove loop-value from {mcc.acerace.windsouth::*}
	loop {mcc.acerace.windeast::*}:
		set {_regions::*} to regions at loop-value's location
		if {_regions::*} is set:
			loop {_regions::*}:
				if the first 5 characters of "%loop-value-2%" are "winde":
					push loop-value-1 east with speed 0.05
		else:
			remove loop-value from {mcc.acerace.windeast::*}
	loop {mcc.acerace.windwest::*}:
		set {_regions::*} to regions at loop-value's location
		if {_regions::*} is set:
			loop {_regions::*}:
				if the first 5 characters of "%loop-value-2%" are "windw":
					push loop-value-1 west with speed 0.05
					#set {_v} to velocity of loop-value-1
					#set {_v} to {_v} ++ vector(-0.5,0,0)
					#set velocity of loop-value-1 to {_v}
		else:
			remove loop-value from {mcc.acerace.windwest::*}

function mccaceracetutorial(p:player):
	wait 3 seconds
	send title "<yellow>Ace Race" to {_p} for 5 seconds
	wait 5 seconds
	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow>Welcome to Ace Race!" to {_p}
	send "" to {_p}
	send "<italics>Here's how you play..." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 3 seconds


	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Ace Race is a race... Who knew?" to {_p}
	send "" to {_p}
	send "There are three laps in total, with a 10-minute time limit." to {_p}
	send "" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 5 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<bold>Run as fast as you can to reach the finish line!" to {_p}
	send "" to {_p}
	send "There are a ton of unique movement mechanics!" to {_p}
	send "" to {_p}
	send "<yellow><bold>Speed boosts:<white> Run on the yellow terracotta to get speedier" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<pink><bold>Jump pads:<white> press space on netherrack to propel into the air (based on where you're facing)" to {_p}
	send "" to {_p}
	send "<light blue><bold>Wing rings: <white>pass through the diamond to get elytra" to {_p}
	send "<pink>- PSA: DO NOT PRESS SPACE AFTER JUMPING THROUGH A WING RING! IT WILL SOMETIMES GLITCH YOU!" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}

	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<pink><bold>Aqua rings: <white>swim through rings to be boosted forward" to {_p}
	send "" to {_p}
	send "<gold><bold>Mega jump pads:<white> acacia planks are mega jump pads!" to {_p}
	send "" to {_p}
	send "<lime>--------------------------------------------------" to {_p}
		
	wait 8 seconds

	send "<lime>--------------------------------------------------" to {_p}
	send "" to {_p}
	send "<yellow><bold>Extra Tips:" to {_p}
	send "" to {_p}
	send "- Watch out for pitfalls, they'll send you back and be devastating to your placement!" to {_p}
	send "" to {_p}
	send "- Uh, your first time will probably suck." to {_p}
	send "<lime>--------------------------------------------------" to {_p}

function aceracecp(p:player, n:number):
	if {mcc.acerace.checkpoint.%{_p}%}+1 is equal to {_n}:
		set {mcc.acerace.checkpoint.%{_p}%} to {_n}
	else if {_n} is equal to 0:
		if {mcc.acerace.official} is true:
			if {mcc.acerace.checkpoint.%{_p}%} is 11:
				add 1 to {mcc.acerace.lapsdone.%{_p}%}
				broadcast formatted "<%mcccolor({mcc.team.%{_p}%})%>%{_p}%<gray> has finished lap <lime>%{mcc.acerace.lapsdone.%{_p}%}%<lime>/3!"
				if {mcc.acerace.lapsdone.%{_p}%} is equal to 3:
					if {mcc.acerace.timeleft} is greater than 0:
						if {mcc.acerace.stage} is equal to 1:
							mccaceracefinish({_p})
				else:
					send title "<lime>Lap %{mcc.acerace.lapsdone.%{_p}%}+1%<lime>/3" to {_p} for 1 second
				set {mcc.acerace.checkpoint.%{_p}%} to 0
		else if {mcc.acerace.checkpoint.%{_p}%} is 6:
			if {speedrun.%{_p}%} is true:
				loop 10 times:

					set {_done} to false
					set {_originaltime} to line 2 of the block at the location loop-number blocks north of the location (77.5, 81.5, -228.5) of the world "world"
					
					set {_originaltime} to {_originaltime} parsed as number
					
					
					if line 2 of the block at the location loop-number blocks north of the location (77.5, 81.5, -228.5) of the world "world" is "":
						set line 2 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{speedruntime.%{_p}%}%"
						set line 3 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{_p}%"
						set {_done} to true
					if {speedruntime.%{_p}%} is less than {_originaltime}:
						
						if loop-number = 10:
							loop loop-number-1 times:
								set line 3 of the block at the location loop-number-2 blocks north of location (77.5, 81.5, -228.5) of the world "world" to line 3 of the block at the location loop-number-2 blocks north of the location 1 block north of location (77.5, 81.5, -228.5) of the world "world"
								set line 2 of the block at the location loop-number-2 blocks north of location (77.5, 81.5, -228.5) of the world "world" to line 2 of the block at the location loop-number-2 blocks north of the location 1 block north of location (77.5, 81.5, -228.5) of the world "world"
							set line 2 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{speedruntime.%{_p}%}%"
							set line 3 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{_p}%"
							set {_done} to true
						set {_originaltime} to line 2 of the block at the location loop-number blocks north of the location 1 block north of location (77.5, 81.5, -228.5) of the world "world"
						set {_originaltime} to {_originaltime} parsed as number
						
						if {_originaltime} is less than or equal to {speedruntime.%{_p}%}:
							loop loop-number-1 times:
								set line 3 of the block at the location loop-number-2 blocks north of location (77.5, 81.5, -228.5) of the world "world" to line 3 of the block at the location loop-number-2 blocks north of the location 1 block north of location (77.5, 81.5, -228.5) of the world "world"
								set line 2 of the block at the location loop-number-2 blocks north of location (77.5, 81.5, -228.5) of the world "world" to line 2 of the block at the location loop-number-2 blocks north of the location 1 block north of location (77.5, 81.5, -228.5) of the world "world"
							set line 2 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{speedruntime.%{_p}%}%"
							set line 3 of the block at the location loop-number blocks north of location (77.5, 81.5, -228.5) of the world "world" to "%{_p}%"
							set {_done} to true
					if {_done} is true:
						exit loop
				send message "Your time is %{speedruntime.%{_p}%}% seconds" to {_p}
				set {speedruntime.%{_p}%} to 0
			add 1 to {mcc.acerace.lapsdone.%{_p}%}
			broadcast formatted "<%mcccolor({mcc.team.%{_p}%})%>%{_p}%<gray> has finished lap <lime>%{mcc.acerace.lapsdone.%{_p}%}%<lime>/3!"
			if {mcc.acerace.lapsdone.%{_p}%} is equal to 3:
				if {mcc.acerace.timeleft} is greater than 0:
					if {mcc.acerace.stage} is equal to 1:
						mccaceracefinish({_p})
			else:
				send title "<lime>Lap %{mcc.acerace.lapsdone.%{_p}%}+1%<lime>/3" to {_p} for 1 second
			set {mcc.acerace.checkpoint.%{_p}%} to 0
		else:
			broadcast "%{_p}% missed cp%{mcc.acerace.checkpoint.%{_p}%}%"

command /checkloc:
	trigger:
		message "%location of target block of player%"
			



command /speedrunacerace:
	trigger:
		event-world is "world"
		execute console command "/mvtp %player's name% acerace5"
		set {mcc.acerace.checkpoint.%player's name%} to 0
		set {speedrun.%player's name%} to true
		set {speedruntime.%player's name%} to 0

every second:
	loop all players in "acerace5":
		if {speedrun.%loop-player's name%} is true:
			add 1 to {speedruntime.%loop-player's name%}


command /resetcps:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			loop all players:
				set {mcc.acerace.checkpoint.%loop-player's name%} to 0

function mccaceracefinish(p:player):
	add 1 to {mcc.acerace.playersdone}
	broadcast formatted "<%mcccolor({mcc.team.%{_p}%})%>%{_p}%<gray> has finished the race in <light blue>%nth({mcc.acerace.playersdone})% <gray>place!"
	set {_p}'s game mode to spectator
	reveal all players to {_p}
	set {_coinamount} to 410-10*{mcc.acerace.playersdone}
	ac({_p}, {_coinamount}+{mcc.acerace.bonus::%{mcc.acerace.playersdone}%}, "You finished the race in %nth({mcc.acerace.playersdone})% place!", true)
	if {mcc.acerace.bonus::%{mcc.acerace.playersdone}%} is greater than 0:
		send "<lime>From finishing in %nth({mcc.acerace.playersdone})%<lime> place, you earned a bonus of %{mcc.acerace.bonus::%{mcc.acerace.playersdone}%}%<lime> coins!" to {_p}
	set {_over} to true
	loop all players:
		if {mcc.team.%loop-player's name%} is not equal to 0:
			if {mcc.acerace.lapsdone.%loop-player's name%} is less than 3:
				set {_over} to false
	if {_over} is true:
		set {mcc.acerace.timeleft} to 0

on jump:
	#if player is op:
	#	message "You jumped! %{jumps}%"
	#	add 1 to {jumps}
	if block below player is netherrack:
		if block 2 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch 
			set {_bla} to (x of {_v})*(x of {_v}) + (z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.91/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.91/{_bla})
			set y of {_v} to 0.3
			push the player {_v} at speed 2.4 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
	if block 2 blocks below player is netherrack:
		if block 3 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch 
			set {_bla} to (x of {_v})*(x of {_v}) + (z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.91/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.91/{_bla})
			set y of {_v} to 0.3
			push the player {_v} at speed 2.4 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
		
on jump:
	#if player is op:
	#	message "You jumped! %{jumps}%"
	#	add 1 to {jumps}
	if block below player is warped planks:
		if block 2 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch 
			set {_bla} to (x of {_v})*(x of {_v}) + (z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.91/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.91/{_bla})
			set y of {_v} to 0.2
			push the player {_v} at speed 1 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
	if block 2 blocks below player is warped planks:
		if block 3 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch 
			set {_bla} to (x of {_v})*(x of {_v}) + (z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.91/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.91/{_bla})
			set y of {_v} to 0.2
			push the player {_v} at speed 1 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
		
on jump:
	#if player is op:
	#	message "You jumped! %{jumps}%"
	#	add 1 to {jumps}
	if block below player is oxidized copper block:
		if block 2 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector 0, 0.3, 0
			push the player {_v} at speed 0.6 
			play sound "ENTITY_GUARDIAN_HURT" to the player
			exit trigger
	if block 2 blocks below player is oxidized copper block:
		if block 3 meters below player is minecraft:barrier:
			wait a tick
			set {_v} to vector 0, 0.3, 0
			push the player {_v} at speed 0.6
			play sound "ENTITY_GUARDIAN_HURT" to the player
			exit trigger

on jump:
	block below player is acacia planks
	block 2 meters below player is minecraft:barrier
	#if {bouncepadcooldown.%player's name%} is false:
	wait a tick
	set {_v} to vector from yaw player's yaw and pitch player's pitch 
	set {_bla} to (x of {_v})*(x of {_v}) + (z of {_v})*(z of {_v})
	set x of {_v} to (x of {_v})*sqrt(0.75/{_bla})
	set z of {_v} to (z of {_v})*sqrt(0.75/{_bla})
	set y of {_v} to 0.5
	push the player {_v} at speed 5 
	play sound "ENTITY_ELDER_GUARDIAN_HURT" with volume 5 to the player
	#set {bouncepadcooldown.%player's name%} to true
	#set {falldamageimmune.%player's name%} to true
	#wait 0.5 seconds
	#set {bouncepadcooldown.%player's name%} to false 
	#wait 5.5 seconds
	#set {falldamageimmune.%player's name%} to false

on jump:
	if block 2 meters below player is minecraft:barrier:
		if block under player is red terracotta:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch
			set {_bla} to (x of {_v})*(x of {_v})+(z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.19/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.19/{_bla})
			set y of {_v} to 0.075
			push the player {_v} at speed 1.35 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player 
		else if block under player is lime terracotta:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch
			set {_bla} to (x of {_v})*(x of {_v})+(z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.0/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.0/{_bla})
			set y of {_v} to 1
			push the player {_v} at speed 0.70 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
	else if block 3 meters below player is minecraft:barrier:
		if block 2 meter under player is red terracotta:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch
			set {_bla} to (x of {_v})*(x of {_v})+(z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.19/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.19/{_bla})
			set y of {_v} to 0.075
			push the player {_v} at speed 1.35 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player 
		else if block 2 meters under player is lime terracotta:
			wait a tick
			set {_v} to vector from yaw player's yaw and pitch player's pitch
			set {_bla} to (x of {_v})*(x of {_v})+(z of {_v})*(z of {_v})
			set x of {_v} to (x of {_v})*sqrt(0.0/{_bla})
			set z of {_v} to (z of {_v})*sqrt(0.0/{_bla})
			set y of {_v} to 1
			push the player {_v} at speed 0.70 
			play sound "ENTITY_GUARDIAN_HURT" with volume 5 to the player
	

on damage:
	victim is a player
	"%victim's world%" is equal to "world"
	{falldamageimmune.%victim%} is true
	cancel event 

on walking on yellow glazed terracotta:
	#block below event-block is minecraft:barrier
	if world is "acerace4":
		set {_p} to potion effect of speed of tier 3 without particles for 3 seconds
		add {_p} to potion effects of the player
		play sound "ENTITY_GUARDIAN_DEATH" with volume 0.2 to the player
	else:
		set {_p} to potion effect of speed of tier 4 without particles for 1.5 seconds
		add {_p} to potion effects of the player
		play sound "ENTITY_GUARDIAN_DEATH" with volume 0.2 to the player

on region enter:
	if the first 2 characters of "%region%" are "ss":
		set {_p} to potion effect of speed of tier 5 without particles for 9999 seconds
		add {_p} to potion effects of event-player
		set {_p} to potion effect of jump boost of tier 5 without particles for 9999 seconds
		add {_p} to potion effects of event-player
		send action bar "Swift Sprint on" to event-player
		wait 1 second
		send action bar "Swift Sprint on" to event-player
        
on region enter:
	if the first 2 characters of "%region%" are "se":
		clear event-player's potion effects
		send action bar "Swift Sprint off" to event-player
		wait 1 second
		send action bar "Swift Sprint off" to event-player

on region enter:
	if the first 3 characters of "%region%" are "eln":
		remove trident from event-player
		send action bar "Trident Removed" to event-player
		wait 1 second
		send action bar "Trident Removed" to event-player



on region enter:
	if the first 3 characters of "%region%" are "ely":
		if event-player does not have trident:
			give event-player unbreakable trident of riptide
			send action bar "Trident Given" to event-player
			wait 1 second
			send action bar "Trident Removed" to event-player

on region enter:
	if the first 2 characters of "%region%" are "aq":
		push the player forwards at speed 3	

on region enter:
	if the first 2 characters of "%region%" are "gl":
		if {flycooldown.%player's name%} is false:
			set the player's chestplate to elytra
			set gliding of player to true
			set {flycooldown.%player's name%} to true
			send action bar "<lime><bold> [Elytra Equipped]" to event-player
			wait 5 tick
			send action bar "<lime><bold> [Elytra Equipped]" to event-player

			wait 3 seconds
			set {flycooldown.%player's name%} to false

on leave:
	set {flycooldown.%player's name%} to false
on join:
	set {flycooldown.%player's name%} to false

command /resetaceraceflycooldowns:
	permission: op
	trigger:
		loop all players:
			set {flycooldown.%loop-player's name%} to false

on region enter:
	if the first 2 characters of "%region%" are "cp":
		set {_bla} to the first index of " " in "%region%"
		
		set {_ba} to the last (length of "%region%"-2) characters of "%region%"
		set {_cpnum} to the first {_bla}-3 characters of {_ba}
		aceracecp(player, {_cpnum} parsed as integer)
		


on gliding state change:
	#gliding state of the player is false
	player's gliding state is true
	if the first 7 characters of "%player's world%" are "acerace":
		set the player's chestplate to air
		send action bar "<red><bold> [Elytra OFF]" to event-player
		wait 5 tick
		send action bar "<red><bold> [Elytra OFF]" to event-player

on region enter:
	the first 7 characters of "%player's world%" are "acerace"
	if the first 2 characters of "%region%" are "bo":
		push the player forwards at speed 0.5


on walking on sandstone or stone:
	if the first 7 characters of "%player's world%" are "acerace":
		set the player's chestplate to air
	
on walking on water:
	if the first 7 characters of "%player's world%" are "acerace":
		set the player's chestplate to air

on inventory click:
	if the first 7 characters of "%player's world%" are "acerace":
		if {mcc.currentevent} is "acerace":
			cancel event	

on damage of player:
	if the first 7 characters of "%victim's world%" are "acerace":
		cancel event

command /cpadd <number>:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.%player's world%.checkpoints::%arg 1%} to player's location

every second:
	loop all players:
		if the first 7 characters of "%loop-player's world%" are "acerace":
			if loop-player's y-coordinate is less than or equal to -10:
				add 1 to {mcc.acerace.checkpoint.%loop-player's name%}
				if "%loop-player's world%" is equal to "acerace":
					teleport loop-player to {mcc.acerace.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
				else if "%loop-player's world%" is equal to "acerace2":
					teleport loop-player to {mcc.acerace2.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
				else if "%loop-player's world%" is equal to "acerace3":
					teleport loop-player to {mcc.acerace3.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
				else if "%loop-player's world%" is equal to "acerace4":
					teleport loop-player to {mcc.acerace4.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
				else if "%loop-player's world%" is equal to "acerace5":
					teleport loop-player to {mcc.acerace5.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
				subtract 1 from {mcc.acerace.checkpoint.%loop-player's name%}
				set loop-player's chestplate to air
			if loop-player's y-coordinate is less than or equal to 20:
				if "%loop-player's world%" is equal to "acerace5":
					add 1 to {mcc.acerace.checkpoint.%loop-player's name%}
					teleport loop-player to {mcc.acerace5.checkpoints::%{mcc.acerace.checkpoint.%loop-player's name%}%}
					subtract 1 from {mcc.acerace.checkpoint.%loop-player's name%}
					set loop-player's chestplate to air

on rightclick with paper:
	"%event-player's world%" starts with "acerace"
	add 1 to {mcc.acerace.checkpoint.%event-player's name%}
	if "%event-player's world%" is equal to "acerace":
		teleport event-player to {mcc.acerace.checkpoints::%{mcc.acerace.checkpoint.%event-player's name%}%}
	else if "%event-player's world%" is equal to "acerace2":
		teleport event-player to {mcc.acerace2.checkpoints::%{mcc.acerace.checkpoint.%event-player's name%}%}
	else if "%event-player's world%" is equal to "acerace3":
		teleport event-player to {mcc.acerace3.checkpoints::%{mcc.acerace.checkpoint.%event-player's name%}%}
	else if "%event-player's world%" is equal to "acerace4":
		teleport event-player to {mcc.acerace4.checkpoints::%{mcc.acerace.checkpoint.%event-player's name%}%}
	else if "%event-player's world%" is equal to "acerace5":
		teleport event-player to {mcc.acerace5.checkpoints::%{mcc.acerace.checkpoint.%event-player's name%}%}
	subtract 1 from {mcc.acerace.checkpoint.%event-player's name%}
	set event-player's chestplate to air

on walking on lava:
	if player's world is "acerace4":
		add 1 to {mcc.acerace.checkpoint.%player's name%}
		teleport player to {mcc.acerace4.checkpoints::%{mcc.acerace.checkpoint.%player's name%}%}
		subtract 1 from {mcc.acerace.checkpoint.%player's name%}
		set player's chestplate to air
	if player's world is "acerace2":
		add 1 to {mcc.acerace.checkpoint.%player's name%}
		teleport player to {mcc.acerace2.checkpoints::%{mcc.acerace.checkpoint.%player's name%}%}
		subtract 1 from {mcc.acerace.checkpoint.%player's name%}
		set player's chestplate to air

on drop:
	event-item is trident
	if the first 7 characters of "%player's world%" are "acerace":
		message "<pink>You might want to keep your trident!" to event-player
		cancel event

on vehicle destroy:
	if the first 7 characters of "%player's world%" are "acerace":
		cancel event

command /mccacerace:
	trigger:
		if command sender is not the console:
			if {mmcc.hoster.%command sender%} isn't true:
				if command sender is not "notcbop":
					message "<pink>You do not have permission to run this command!"
					exit trigger
		execute console command "/mccnewgame"
		set {mcc.acerace.official} to true
		loop {mcc.acerace.barriers::*}:
			set block at loop-value to minecraft:barrier
		loop all players:
			if {mcc.team.%loop-player's name%} is not equal to 0:
				if {mcc.acerace.mapnum} is equal to 1:
					execute console command "/mv tp %loop-player's name% acerace"
				else:
					execute console command "/mv tp %loop-player's name% acerace%{mcc.acerace.mapnum}%"
				set {immune.%loop-player's name%} to false
				set loop-player's game mode to adventure
				clear the loop-player's inventory
				give a trident of riptide 3 and unbreaking 10 to the loop-player
				give a paper named "<gold>Teleport Scroll" with lore "right click to return to your checkpoint!" to loop-player
				set the loop-player's boots to leather boots
				dye the loop-player's boots mcccolor({mcc.team.%loop-player's name%})
				set {mcc.acerace.checkpoint.%loop-player's name%} to 0
				set {mcc.acerace.lapsdone.%loop-player's name%} to 0
				set {bouncepadcooldown.%loop-player's name%} to false
				mccaceracetutorial(loop-player)
				hide loop-player from all players
				set loop-player's gamemode to adventure
		set {mcc.currentevent} to "acerace"
		set {mcc.acerace.playersdone} to 0	
		set {mcc.acerace.timeleft} to 60 
		set {mcc.acerace.stage} to 0
		delete {mcc.acerace.windnorth::*}
		delete {mcc.acerace.windsouth::*}
		delete {mcc.acerace.windeast::*}
		delete {mcc.acerace.windwest::*}
		if {mcc.acerace.mapnum} is equal to 2:
			execute console command "/kc keeprail coords -84 68 -93 acerace2"
		execute console command "/resetaceraceflycooldowns"
		set gamemode of all players to adventure

on join:
	wait 2 seconds
	if {mcc.currentevent} is "acerace":
		if {mcc.team.%player's name%} is not 0:
			
			if {mcc.acerace.mapnum} is equal to 1:
				execute console command "/mv tp %player's name% acerace"
			else:
				execute console command "/mv tp %player's name% acerace%{mcc.acerace.mapnum}%"
			set {immune.%player's name%} to false
			set player's game mode to adventure
			clear the player's inventory
			give a trident of riptide 3 and unbreaking 10 to the player
			set the player's boots to leather boots
			dye the player's boots mcccolor({mcc.team.%player's name%})
			set {mcc.acerace.checkpoint.%player's name%} to 0
			set {mcc.acerace.lapsdone.%player's name%} to 0
			set {bouncepadcooldown.%player's name%} to false

command /endar:
	trigger:
		if {mmcc.hoster.%command sender%} is true:
			set {mcc.acerace.timeleft} to 1

every second:
	if {mcc.paused} is true:
		exit trigger
	if {mcc.acerace.timeleft} is greater than 0:
		subtract 1 from {mcc.acerace.timeleft} 
		if {mcc.acerace.timeleft} is equal to 591 or 282:
			execute console command "/playmusic acerace"
		if {mcc.acerace.timeleft} is equal to 3:
			if {mcc.acerace.stage} is equal to 0:
				loop all players:
					if {mcc.team.%loop-player's name%} is not equal to 0:
						execute console command "/boopboopboopbeep %loop-player's name%"
	else if {mcc.acerace.timeleft} is equal to 0:
		if {mcc.acerace.stage} is equal to 0:
			set {mcc.acerace.stage} to 1
			set {mcc.acerace.timeleft} to 900 # to change back next time
			loop {mcc.acerace.barriers::*}:
				set block at loop-value to air 
			execute console command "/playmusic acerace"
		else if {mcc.acerace.stage} is equal to 1:
			set {mcc.acerace.stage} to 2
			set {mcc.acerace.timeleft} to 30
			loop all players:
				if {mcc.team.%loop-player's name%} is not equal to 0:
					send title "<pink>Game over!" to loop-player for 3 seconds
			delete {mcc.acerace.windnorth::*}
			delete {mcc.acerace.windsouth::*}
			delete {mcc.acerace.windeast::*}
			delete {mcc.acerace.windwest::*}
			execute console command "/mccstandings"
			execute console command "/kc releaserail coords -84 68 -93 acerace2"
		else:
			execute console command "/mccbreak"
			set {mcc.acerace.timeleft} to -1
			set {mcc.acerace.official} to false

on rightclick on cave vines:
	"%player's world%" is "acerace" or "acerace2"
	player's game mode is not creative
	cancel event


